(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{377:function(t,e,s){"use strict";s.r(e);var a=s(14),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git-tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-tags"}},[t._v("#")]),t._v(" Git Tags")]),t._v(" "),e("p",[t._v("相信通过前面课程的学习你已经发现了：分支很容易被人为移动，并且当有新的提交时，它也会移动。分支很容易被改变，大部分分支还只是临时的，并且还一直在变。")]),t._v(" "),e("p",[t._v("你可能会问了：有没有什么可以"),e("em",[t._v("永远")]),t._v("指向某个提交记录的标识呢，比如软件发布新的大版本，或者是修正一些重要的 Bug 或是增加了某些新特性，有没有比分支更好的可以永远指向这些提交的方法呢？")]),t._v(" "),e("p",[t._v("当然有了！Git 的 tag 就是干这个用的啊，它们可以（在某种程度上 —— 因为标签可以被删除后重新在另外一个位置创建同名的标签）永久地将某个特定的提交命名为里程碑，然后就可以像分支一样引用了。")]),t._v(" "),e("p",[t._v("更难得的是，它们并"),e("strong",[t._v("不会随着新的提交而移动")]),t._v("。你也不能切换到某个标签上面进行修改提交，它就像是提交树上的一个锚点，标识了某个特定的位置。")]),t._v(" "),e("p",[t._v("咱们来看看标签到底是什么样。")]),t._v(" "),e("p",[t._v("咱们先建立一个标签，指向提交记录 "),e("code",[t._v("C1")]),t._v("，表示这是我们 1.0 版本。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git tag v1 C1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230210223038543.png",alt:"image-20230210223038543"}})]),t._v(" "),e("p",[t._v("很容易吧！我们将这个标签命名为 "),e("code",[t._v("v1")]),t._v("，并且明确地让它指向提交记录 "),e("code",[t._v("C1")]),t._v("，如果你不指定提交记录，Git 会用 "),e("code",[t._v("HEAD")]),t._v(" 所指向的位置。")]),t._v(" "),e("h1",{attrs:{id:"git-describe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-describe"}},[t._v("#")]),t._v(" Git Describe")]),t._v(" "),e("p",[t._v("由于标签在代码库中起着“锚点”的作用，Git 还为此专门设计了一个命令用来"),e("strong",[t._v("描述")]),t._v("离你最近的锚点（也就是标签），它就是 "),e("code",[t._v("git describe")]),t._v("！")]),t._v(" "),e("p",[t._v("Git Describe 能帮你在提交历史中移动了多次以后找到方向；当你用 "),e("code",[t._v("git bisect")]),t._v("（一个查找产生 Bug 的提交记录的指令）找到某个提交记录时，或者是当你坐在你那刚刚度假回来的同事的电脑前时， 可能会用到这个命令。")]),t._v(" "),e("p",[e("code",[t._v("git describe")]),t._v(" 的语法是：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git describe <ref>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("code",[t._v("<ref>")]),t._v(" 可以是任何能被 Git 识别成提交记录的引用，如果你没有指定的话，Git 会以你目前所检出的位置（"),e("code",[t._v("HEAD")]),t._v("）。")]),t._v(" "),e("p",[t._v("它输出的结果是这样的：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<tag>_<numCommits>_g<hash>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);e.default=v.exports}}]);