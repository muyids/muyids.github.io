(window.webpackJsonp=window.webpackJsonp||[]).push([[704],{978:function(e,v,_){"use strict";_.r(v);var s=_(14),a=Object(s.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"设计一个聊天系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计一个聊天系统"}},[e._v("#")]),e._v(" 设计一个聊天系统")]),e._v(" "),v("h2",{attrs:{id:"场景-scenario"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#场景-scenario"}},[e._v("#")]),e._v(" 场景 Scenario")]),e._v(" "),v("p",[e._v("基本功能：")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("两个用户点对点聊天")])]),e._v(" "),v("li",[v("p",[e._v("群聊")])]),e._v(" "),v("li",[v("p",[e._v("用户在线状态")])]),e._v(" "),v("li",[v("p",[e._v("用户系统：用户登录注册，用户的通讯录（好友信息，群组）\n其他功能：")])]),e._v(" "),v("li",[v("p",[e._v("历史消息")])]),e._v(" "),v("li",[v("p",[e._v("多机登录\n以微信为例，估计 QPS，存储")])])]),e._v(" "),v("p",[e._v("日活用户估计")]),e._v(" "),v("p",[e._v("1B 月活，75%日活，约 750M 日活，假设我们要设计一个 100M 日活的聊天系统")]),e._v(" "),v("p",[e._v("QPS: 假设平均一个用户一天发送 20 条信息，Average QPS = 20 * 100 M / 100 K seconds = 20K")]),e._v(" "),v("p",[e._v("Peek QPS : 20K * 5 = 100K")]),e._v(" "),v("p",[e._v("存储：")]),e._v(" "),v("p",[e._v("每个用户发送 20 条消息，1B 日活用户，30bytes 一条消息，20 _ 1B _ 30bytes = 60G")]),e._v(" "),v("h2",{attrs:{id:"服务-service"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务-service"}},[e._v("#")]),e._v(" 服务 Service")]),e._v(" "),v("p",[e._v("Message Service: 负责消息管理")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("- saveMsg\n- getMsgList\n")])])]),v("p",[e._v("Real-time Service（Broker）: 实时消息推送")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("Broker {Publisher, Subscriber}\n")])])]),v("p",[e._v("User Service 用户服务")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("登录，注册，通讯录等\n")])])]),v("h2",{attrs:{id:"storage-存储"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#storage-存储"}},[e._v("#")]),e._v(" Storage 存储")]),e._v(" "),v("p",[e._v("Message {\nid， from, to, content, created_at\n}")]),e._v(" "),v("p",[e._v("如果这样设计，查询 A 和 B 的聊天消息，需要")]),e._v(" "),v("p",[e._v("select * from msgtable where from=A and to=B or from=B and to=A order by created_at desc;")]),e._v(" "),v("p",[e._v("问题：")]),e._v(" "),v("ol",[v("li",[e._v("SQL 复杂，效率低下")]),e._v(" "),v("li",[e._v("多人聊天，无法扩展\n需要添加一个会话 ID（sessionId）")])]),e._v(" "),v("p",[e._v("两个人聊天，可以按 A 和 B 的用户 id 升序排列，中间分隔符隔开")]),e._v(" "),v("p",[e._v("另外，会话列表怎么实现？")]),e._v(" "),v("p",[e._v("增加 session 表")]),e._v(" "),v("p",[e._v("Session {\nownerId, sessionId, participant_ids, is_muted, nickname, created_at, updated_at\n}")]),e._v(" "),v("p",[e._v("优化消息表")]),e._v(" "),v("p",[e._v("Message {\nid，sessionId, from, content, created_at\n}")]),e._v(" "),v("p",[e._v("选择存储类型 SQL or NOSQL?")]),e._v(" "),v("p",[e._v("Message Table -> NoSQL : 数据量很大，不需要修改，一条聊天信息就像一条 log 一样")]),e._v(" "),v("p",[e._v("Session Table -- 对话表（SQL)")]),e._v(" "),v("p",[e._v("对话表需要的索引")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",[v("code",[e._v("查询单个会话信息 ownerId + sessionId (primary key)\n\n查询会话列表 ownerId + updated_at\nselect * from Session where ownerId=X order by updated_at desc\n")])])]),v("p",[e._v("NoSQL 对二级索引的支持并不友好，所以考虑 SQL")]),e._v(" "),v("p",[e._v("100 个 会话消息, 10B 用户， 1000 B 条消息，水平拆分 ， 用户 id mod 10000 分为 1 万张表保存 会话表")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("群聊的消息如何推送？")]),e._v(" "),v("p",[e._v("以 500 人的群聊为例，实际上很少一部分人实时在线")]),e._v(" "),v("p",[e._v("我们需要知道谁是在线的")]),e._v(" "),v("p",[e._v("增加 Channel Service（Topic Service）, 为每个会话增加一个 Channel 信息")]),e._v(" "),v("p",[e._v("用户登录时，需要先订阅对应的 Channel；用户断线了，broker 通知 Channel 移除掉")]),e._v(" "),v("p",[e._v("这样 Channel 就知道频道里哪些用户还活着")]),e._v(" "),v("p",[e._v("群发消息时，push 给 channel service, channel service 查到在线用户，发给 Push Service(Broker), 给在线用户推消息")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("在线离线状态更新")]),e._v(" "),v("p",[e._v("上线，主动下线 都向服务器上报状态\n被动下线（网络断开等），使用心跳机制，每隔 10 秒上报自己的最后在线时间\n请求用户在线状态时，使用拉的方式，判断最后在线时间是否在 10 秒内，如果不在，就是离线")]),e._v(" "),v("p",[e._v("facebook 大概 3-5 秒 pull 一次服务器")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("Broker 机器数量：100 M 用户同时在线；单台机器 支持的 socket 连接数可以达到 65535")])])}),[],!1,null,null,null);v.default=a.exports}}]);