(window.webpackJsonp=window.webpackJsonp||[]).push([[614],{888:function(t,s,a){"use strict";a.r(s);var r=a(14),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"road-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#road-map"}},[t._v("#")]),t._v(" Road Map")]),t._v(" "),s("iframe",{attrs:{src:t.$withBase("/dynamic-interval.html"),width:"100%",height:"800",frameborder:"0",scrolling:"No",leftmargin:"0",topmargin:"0"}}),t._v(" "),s("h1",{attrs:{id:"区间-dp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区间-dp"}},[t._v("#")]),t._v(" 区间 DP")]),t._v(" "),s("p",[s("strong",[t._v("区间 DP")]),t._v("也属于 "),s("strong",[t._v("线性 DP")]),t._v("的一种，以 ”区间长度“ 作为 DP 的 ”阶段“， 使用 两个坐标（区间的左右断点）描述每个维度。")]),t._v(" "),s("p",[t._v("在区间 DP 中，一个状态由若干个比他更小且包含于他的区间所代表的状态转移而来，因此区间 DP 的决策往往就是划分区间的方法。")]),t._v(" "),s("p",[t._v("区间 DP 的初态一般由长度为 1 的”元区间“构成。")]),t._v(" "),s("p",[t._v("这种向下划分，再向上递推的模式与某些树形结构，如线段树，有很大相似之处。")]),t._v(" "),s("p",[t._v("借助区间 DP 这种与树形相关的结构，我们也将提及记忆化搜索 -- 本质是 DP 的递归实现方法。")]),t._v(" "),s("h1",{attrs:{id:"特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("区间 DP 在状态计算的时候一定要 认真 划分好 "),s("strong",[t._v("边界")]),t._v(" 和 "),s("strong",[t._v("转移")]),t._v("; 因为 区间边界 搞错状态 转移方程 是非常常见的错误。")])]),t._v(" "),s("li",[s("p",[t._v("合并：即将两个或多个部分进行整合，当然也可以反过来；")])]),t._v(" "),s("li",[s("p",[t._v("特征：能将问题分解为能两两合并的形式；")])]),t._v(" "),s("li",[s("p",[t._v("求解：对整个问题设最优值，枚举合并点，将问题分解为左右两个部分，最后合并两个部分的最优值得到原问题的最优值。")])]),t._v(" "),s("li",[s("p",[t._v("一般用二维数组表示区间")])]),t._v(" "),s("li",[s("p",[t._v("区间问题只需要考虑 "),s("strong",[t._v("区间头和区间尾")])])])]),t._v(" "),s("h1",{attrs:{id:"代码模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码模板"}},[t._v("#")]),t._v(" 代码模板")]),t._v(" "),s("p",[t._v("常用于一维区间 DP")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" len ∈ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长度从小到大")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" N "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以 i 为 开头, j 结尾的 区间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k ∈ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以 k 为分割点，进行分治")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 状态转移方程")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);