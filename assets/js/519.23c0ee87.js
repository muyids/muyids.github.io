(window.webpackJsonp=window.webpackJsonp||[]).push([[519],{793:function(t,a,s){"use strict";s.r(a);var i=s(14),r=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"最小生成树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最小生成树"}},[t._v("#")]),t._v(" 最小生成树")]),t._v(" "),a("p",[t._v("最小生成树处理的是无向图")]),t._v(" "),a("h2",{attrs:{id:"prim-算法-普利姆算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prim-算法-普利姆算法"}},[t._v("#")]),t._v(" Prim 算法（普利姆算法）")]),t._v(" "),a("h3",{attrs:{id:"朴素版-prim-o-n-2-稠密图-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#朴素版-prim-o-n-2-稠密图-✅"}},[t._v("#")]),t._v(" 朴素版 Prim O(n^2) 稠密图 ✅")]),t._v(" "),a("h3",{attrs:{id:"堆优化-prim-o-mlog-n-不常用-❎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆优化-prim-o-mlog-n-不常用-❎"}},[t._v("#")]),t._v(" 堆优化 Prim O(mlog n) 不常用 ❎")]),t._v(" "),a("h2",{attrs:{id:"kruskal-算法-克鲁斯卡尔算法-o-mlogm-稀疏图-✅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kruskal-算法-克鲁斯卡尔算法-o-mlogm-稀疏图-✅"}},[t._v("#")]),t._v(" Kruskal 算法 (克鲁斯卡尔算法) O(mlogm) 稀疏图 ✅")]),t._v(" "),a("p",[t._v("稀疏图用 Kruskal 算法，稠密图用朴素版 Prim 算法，堆优化版 Prim 算法一般不会用")]),t._v(" "),a("h2",{attrs:{id:"二分图的判定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二分图的判定"}},[t._v("#")]),t._v(" 二分图的判定")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("染色法 O(n+m)")]),t._v(" "),a("ul",[a("li",[t._v("判断能否被二染色")])])]),t._v(" "),a("li",[a("p",[t._v("匈牙利算法 O(mn),实际运行时间一般远小于 O(mn)")]),t._v(" "),a("ul",[a("li",[t._v("求二分图的最大匹配")])])])]),t._v(" "),a("h1",{attrs:{id:"_858-prim-算法求最小生成树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_858-prim-算法求最小生成树"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.acwing.com/problem/content/860/",target:"_blank",rel:"noopener noreferrer"}},[t._v("858. Prim 算法求最小生成树"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("定义：点到集合的距离")]),t._v(" "),a("h2",{attrs:{id:"算法流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法流程"}},[t._v("#")]),t._v(" 算法流程")]),t._v(" "),a("ul",[a("li",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("d")]),a("mi",[t._v("i")]),a("mi",[t._v("s")]),a("mi",[t._v("t")]),a("mo",[t._v("[")]),a("mi",[t._v("i")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("dist[i]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("d")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mord mathit"},[t._v("s")]),a("span",{staticClass:"mord mathit"},[t._v("t")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v(" 初始化为 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mo",[t._v("+")]),a("mi",{attrs:{mathvariant:"normal"}},[t._v("∞")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("+\\infty")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.58333em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord"},[t._v("+")]),a("span",{staticClass:"mord mathrm"},[t._v("∞")])])])])]),t._v(" "),a("li",[t._v("for (i=0; i < n; i++) // 迭代 n 次，加入 n 个点\n"),a("ul",[a("li",[t._v("t <- 找到集合外距离最近的点")]),t._v(" "),a("li",[t._v("用 t 更新其他点到集合的距离")])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);