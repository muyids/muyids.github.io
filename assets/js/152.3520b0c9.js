(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{429:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ul",[t("li",[s._v("java 内存模型 JMM")]),s._v(" "),t("li",[s._v("volatile")]),s._v(" "),t("li",[s._v("synchronized")]),s._v(" "),t("li",[s._v("CAS")]),s._v(" "),t("li",[s._v("线程不安全")]),s._v(" "),t("li",[s._v("锁")]),s._v(" "),t("li",[s._v("AQS")]),s._v(" "),t("li",[s._v("并发组件\n"),t("ul",[t("li",[s._v("线程池")]),s._v(" "),t("li",[s._v("阻塞队列")]),s._v(" "),t("li",[s._v("FutureTask")]),s._v(" "),t("li",[s._v("Lock 和 Condition")])])]),s._v(" "),t("li",[s._v("并发工具类\n"),t("ul",[t("li",[s._v("CountDownLatch")]),s._v(" "),t("li",[s._v("CyclicBarrier")]),s._v(" "),t("li",[s._v("Semaphore")])])]),s._v(" "),t("li",[s._v("死锁定位分析")])]),s._v(" "),t("hr"),s._v(" "),t("h4",{attrs:{id:"java-内存模型-jmm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-内存模型-jmm"}},[s._v("#")]),s._v(" java 内存模型 JMM")]),s._v(" "),t("p",[s._v("![2021-11-08 pm3.35.10](https://muyids.oss-cn-beijing.aliyuncs.com/2021-11-08 pm3.35.10.png)")]),s._v(" "),t("p",[s._v("JVM 内存模型是什么？\n（1）JVM 内存模型共分为 5 个区：\n栈区（java 虚拟机栈），堆区")]),s._v(" "),t("p",[s._v("本地方法栈，程序计数器，方法区（元空间）")]),s._v(" "),t("p",[s._v("（2）各个区各自的作用：\na. 本地方法栈：存放 C++的 native 方法的栈区\nb. 程序计数器：记录各个线程执行的字节码的位置\nc. 方法区（jdk7 之前永久代，Java8 叫"),t("strong",[s._v("元空间")]),s._v("）：主要用于存储静态方法成员变量 static, 类加载器 classloader 等信息\nd. Java 虚拟机栈：用于存储局部变量，对象地址\ne.堆：对象实例\n（3）线程私有、公有\na.线程私有：每个线程在开辟、运行的过程中会单独创建这样的一份内存，有多少个线程可能有多少个内存\n"),t("strong",[s._v("Java 虚拟机栈、本地方法栈、程序计数器是线程私有的")]),s._v("\nb.线程全局共享的\n堆和方法区\n（4）栈虽然方法运行完毕了之后被清空了，但是堆上面的还没有被清空，所以引出了 GC（垃圾回收），不能立马删除，因为不知道是否还有其它的也是引用了当前的地址来访问的")]),s._v(" "),t("h4",{attrs:{id:"volatile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[s._v("#")]),s._v(" volatile")]),s._v(" "),t("ul",[t("li",[s._v("可见性：volatile 修饰的变量：直接操作主存；主动写入主存，读取时也从主存读取")]),s._v(" "),t("li",[s._v("有序性：禁止指令重排序")]),s._v(" "),t("li",[s._v("不保证原子性")])]),s._v(" "),t("h4",{attrs:{id:"synchronized"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[s._v("#")]),s._v(" synchronized")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("原子性内置锁，也称“监视器锁”")])]),s._v(" "),t("li",[t("p",[s._v("遍历后同步代码块前后加上 monitorenter, monitorexit 字节码指令")])]),s._v(" "),t("li",[t("p",[s._v("依赖操作系统底层互斥锁实现")])]),s._v(" "),t("li",[t("p",[s._v("主要作用是实现原子性操作 和 解决共享变量的内存可见性问题\n工作原理：")])]),s._v(" "),t("li",[t("p",[s._v("执行 monitorenter 指令尝试获取对象锁，获取成功，锁计数器+1")])]),s._v(" "),t("li",[t("p",[s._v("排他锁，一个线程获取锁后，其他线程进入等待队列")])]),s._v(" "),t("li",[t("p",[s._v("执行 monitorexit 指令，锁计数器-1，值为 0 时，锁释放，等待中的线程再继续竞争")])])]),s._v(" "),t("p",[s._v("缺点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("由于 java 中的线程和操作系统原生线程是一一对应的，线程被阻塞或唤醒会从用户态切换到内核态，非常消耗性能")])]),s._v(" "),t("li",[t("p",[s._v("从内存语义来说，加锁的过程会清除工作内存中的共享变量，再从主内存读取，而释放锁的过程则是将工作内存中的共享变量写回主内存。\n锁优化机制：")])]),s._v(" "),t("li",[t("p",[s._v("从 JDK1.6 版本之后，synchronized 在不断优化锁的机制")])]),s._v(" "),t("li",[t("p",[s._v("优化机制包括自适应锁、自旋锁、锁消除、锁粗化、轻量级锁和偏向锁")])]),s._v(" "),t("li",[t("p",[s._v("锁的状态从低到高依次为"),t("strong",[s._v("无锁->偏向锁->轻量级锁->重量级锁")])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("自旋锁")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("大部分时间，锁占用时间很短，没必要挂起线程，因为用户态和内核态的上下文切换严重影响性能；")]),s._v(" "),t("li",[s._v("自旋：让线程执行忙循环，默认 10 次，可以通过-XX:PreBlockSpin 设置。")])])]),s._v(" "),t("li",[t("p",[s._v("自适应锁：")]),s._v(" "),t("ul",[t("li",[s._v("自适应的自旋锁")]),s._v(" "),t("li",[s._v("自旋时间不固定，由上一次在同一个锁上的自旋时间和锁的持有者状态来决定")])])]),s._v(" "),t("li",[t("p",[s._v("锁消除：")]),s._v(" "),t("ul",[t("li",[s._v("JVM 检测一些同步代码块，完全不存在数据竞争的场景，不需要加锁，进行锁消除")])])]),s._v(" "),t("li",[t("p",[s._v("锁粗化：")]),s._v(" "),t("ul",[t("li",[s._v("很多操作对同一个对象加锁，会把锁的同步范围扩展到整个操作序列之外")])])]),s._v(" "),t("li",[t("p",[s._v("偏向锁")]),s._v(" "),t("ul",[t("li",[s._v("线程访问同步块获取锁时，会在对象头和栈帧的锁记录里存储线程 ID")]),s._v(" "),t("li",[s._v("此线程再次进入同步块时就不需要 CAS 来加锁和解锁了")]),s._v(" "),t("li",[s._v("偏向锁永远偏向第一个获取锁的线程")]),s._v(" "),t("li",[s._v("当有其他线程竞争偏向锁时，持有偏向锁的线程会释放偏向锁")]),s._v(" "),t("li",[s._v("设置-XX:+UseBiasedLocking 开启偏向锁")])])]),s._v(" "),t("li",[t("p",[s._v("轻量级锁：")]),s._v(" "),t("ul",[t("li",[s._v("对象头中包含有一些锁的标志位")]),s._v(" "),t("li",[s._v("代码进入同步块的时候，JVM 将会使用 CAS 方式来尝试获取锁")]),s._v(" "),t("li",[s._v("如果更新成功则会把对象头中的状态位标记为轻量级锁，如果更新失败，当前线程就尝试自旋来获得锁")])])])]),s._v(" "),t("p",[s._v("总结：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("偏向锁：通过对象头的偏向线程 ID 来对比，甚至都不需要 CAS 了")])]),s._v(" "),t("li",[t("p",[s._v("轻量级锁：通过 CAS 修改对象头锁记录和自旋来实现")])]),s._v(" "),t("li",[t("p",[s._v("重量级锁是除了拥有锁的线程其他全部阻塞\n"),t("strong",[s._v("volitale 和 synchronized 的区别")])])])]),s._v(" "),t("ol",[t("li",[s._v("volitale 关键字提供了一个功能，就是被其修饰的变量在被修改后会被强制刷入到主内存中，其他处理器的缓存由于遵守了缓存一致性原则，会把这个变量的值从主内存中加载到自己的缓存中，因此在并发编程中保证了变量的可见性。")]),s._v(" "),t("li",[s._v("volitale 关键字会禁止指令重排，从而来保证有序性")]),s._v(" "),t("li",[s._v("volitale 关键字不能保证原子性")]),s._v(" "),t("li",[s._v("synchronized 可以保证原子性，通过字节码指令 monitorenter 和 monitorexit")]),s._v(" "),t("li",[s._v("synchronized 可以保证可见性")]),s._v(" "),t("li",[s._v("synchronized 关键字保证同一时刻只允许一条线程操作，从而保证了有序性")])]),s._v(" "),t("h4",{attrs:{id:"cas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cas"}},[s._v("#")]),s._v(" CAS")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("cas(compare & swap)实际上是一种"),t("strong",[s._v("无锁编程")])])]),s._v(" "),t("li",[t("p",[s._v("核心问题：compare 和 swap 必须“被绑定”，是原子的")])]),s._v(" "),t("li",[t("p",[s._v("CAS 原子性的实现：各种不同架构的 CPU 都提供了"),t("strong",[s._v("指令级别的 CAS 原子操作")])]),s._v(" "),t("p",[s._v("比如：x86 架构下，通过"),t("code",[s._v("cmpxchg")]),s._v("指令支持 cas；arm 架构下，通过"),t("code",[s._v("LL/SC")]),s._v("来实现 cas；也就是说，不需要通过操作系统的同步原语（比如 mutex），cpu 已经原生支持了 cas；这样我们也就不再依赖锁来进行线程同步，但这并不意味着无锁能完全替代有锁")])])]),s._v(" "),t("p",[s._v("三个操作数：")]),s._v(" "),t("ul",[t("li",[s._v("V : 变量内存地址")]),s._v(" "),t("li",[s._v("A：旧的预期值")]),s._v(" "),t("li",[s._v("B：要设置的新值")])]),s._v(" "),t("p",[s._v("CAS 的问题：")]),s._v(" "),t("ul",[t("li",[s._v("ABA 问题 => 用版本号解决；Java 中有 AtomicStampedReference 来解决这个问题，加入了预期标志和更新后标志两个字段")]),s._v(" "),t("li",[s._v("循环时间长开销大：自旋 CAS 的方式如果长时间不成功，会给 CPU 带来很大的开销。")]),s._v(" "),t("li",[t("strong",[s._v("只能保证一个共享变量的原子操作")]),s._v("：多个共享变量可以通过 AtomicReference 来处理或者使用锁 synchronized 实现")])]),s._v(" "),t("p",[s._v("compare and swap - 乐观锁")]),s._v(" "),t("p",[s._v("AutomicInteger: 自旋锁； "),t("strong",[s._v("i++线程不安全")]),s._v("；判断当前用到的变量和内存中的变量是否相同，如果一致+1，如果不一致，使用 while 循环，相当于自旋")]),s._v(" "),t("p",[s._v("AutomicReference : 原子引用 （用 ABA 问题）")]),s._v(" "),t("p",[s._v("AutomicStampedReference: 带版本号的原子引用 （解决 ABA 问题）")]),s._v(" "),t("h4",{attrs:{id:"线程不安全集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程不安全集合"}},[s._v("#")]),s._v(" 线程不安全集合")]),s._v(" "),t("p",[s._v("高并发环境下会报异常：java.util.ConcurrentModificationException")]),s._v(" "),t("p",[s._v("解决办法，使用线程安全的集合：")]),s._v(" "),t("p",[s._v("比如：ArrayList: 定义空数组 Object[]，第一次 add 的时候判断如果是空数组初始化容量是 10")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Collections.synchronizedList")])]),s._v(" "),t("li",[t("p",[s._v("CopyOnWriteArrayList() : 读写分离，写时复制；读取完全不加锁，写入也不会阻塞读取操作，只有写入和写入之间需要进行同步等待，读操作的性能得到大幅度提升\nHashSet: 底层是 hashMap，key 是 set 的值，value 是一个固定的 object 常量")])]),s._v(" "),t("li",[t("p",[s._v("Collections.synchronizedSet()")])]),s._v(" "),t("li",[t("p",[s._v("CopyOnWriteArraySet() ; 底层是 CopyOnWriteArrayList()\nHashMap:")])]),s._v(" "),t("li",[t("p",[s._v("ConcurrentHashMap ; 比较好用")])]),s._v(" "),t("li",[t("p",[s._v("Collections.synchronizedMap()")])])]),s._v(" "),t("h4",{attrs:{id:"锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#锁"}},[s._v("#")]),s._v(" 锁")]),s._v(" "),t("p",[s._v("① 公平锁")]),s._v(" "),t("ul",[t("li",[s._v("队列；先来先得；new ReentrantLock(true);")])]),s._v(" "),t("p",[s._v("② 非公平锁")]),s._v(" "),t("ul",[t("li",[s._v("可以插队（可造成优先级反转和饥饿现象）；new ReentranLock();")])]),s._v(" "),t("p",[s._v("③ 可重入锁（递归锁）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("ReentrantLock / Syncronized 类似于大门钥匙 -- 防止死锁")])]),s._v(" "),t("li",[t("p",[s._v("同一线程外层函数获得锁后，内层递归函数仍然能获取该锁（内层会自动获取锁）")])]),s._v(" "),t("li",[t("p",[s._v("即：线程可以进入任何一个它已经拥有的锁所同步着的代码块")])])]),s._v(" "),t("p",[s._v("④ 自旋锁")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("尝试获取锁的线程不会立即阻塞，而是采用循环的方式获取锁")])]),s._v(" "),t("li",[t("p",[s._v("好处：减少线程上下文切换的消耗，缺点：循环会消耗 cpu")])])]),s._v(" "),t("p",[s._v("⑤ 排他锁，独占锁（写）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("该锁一次只能被一个线程持有；")])]),s._v(" "),t("li",[t("p",[s._v("ReentranLock / Syncronized")])])]),s._v(" "),t("p",[s._v("⑥ 共享锁（读）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("没有比自己版本号小的写请求")])]),s._v(" "),t("li",[t("p",[s._v("该锁可被多个线程所持有")])]),s._v(" "),t("li",[t("p",[s._v("ReentranReadWriteLock : 读锁是共享锁，写锁是独占锁")])]),s._v(" "),t("li",[t("p",[s._v("读锁的共享锁可保证并发读是非常高效的，读写，写读，写写的过程是互斥的")])]),s._v(" "),t("li",[t("p",[s._v("写操作：原子+独占")])])]),s._v(" "),t("h4",{attrs:{id:"aqs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aqs"}},[s._v("#")]),s._v(" AQS")]),s._v(" "),t("ul",[t("li",[s._v("抽象队列同步器 AbstractQueuedSynchronizer（以下简称同步器）")]),s._v(" "),t("li",[s._v("用来构建锁或者其他同步组件的基础框架")]),s._v(" "),t("li",[s._v("使用一个 int 成员变量 state 表示同步状态")]),s._v(" "),t("li",[s._v("通过内置的 FIFO 队列来完成资源获取线程的排队工作")]),s._v(" "),t("li",[s._v("并发包的作者（Doug Lea）期望它能够成为实现大部分同步需求的基础")])]),s._v(" "),t("h4",{attrs:{id:"并发组件和并发工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发组件和并发工具类"}},[s._v("#")]),s._v(" 并发组件和并发工具类")]),s._v(" "),t("ul",[t("li",[s._v("并发组件：线程池、阻塞队列、Future 和 FutureTask、Lock 和 Condition。")]),s._v(" "),t("li",[s._v("并发工具：CountDownLatch、CyclicBarrier、Semaphore 和 Exchanger")])]),s._v(" "),t("h4",{attrs:{id:"线程池"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程池"}},[s._v("#")]),s._v(" 线程池")]),s._v(" "),t("p",[s._v("<1>为什么要用线程池")]),s._v(" "),t("p",[s._v("线程池主要是控制运行的线程的数量，处理过程中将任务放入队列，然后再线程创建后启动这些任务；")]),s._v(" "),t("p",[s._v("如果线程数量超过最大数量，超出数量的线程排队等候，等其他线程执行完毕，再从队列中取出任务来执行")]),s._v(" "),t("p",[s._v("主要特点：线程复用，控制最大并发数，管理线程")]),s._v(" "),t("p",[s._v("<2>创建线程（实现多线程）的四种方式")]),s._v(" "),t("ul",[t("li",[s._v("继承 Thread 类")]),s._v(" "),t("li",[s._v("实现 Runnable 接口：无返回值，不抛异常，实现 run 方法")]),s._v(" "),t("li",[s._v("实现 Callable 接口：有返回值，会抛异常，实现 call 方法")]),s._v(" "),t("li",[s._v("通过线程池 (实际中最常用)\ncallable")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Callable")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CallableDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExecutionException")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),s._v(" futureTask "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FutureTask")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("futureTask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"AA"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("futureTask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isDone")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待线程执行完")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),s._v(" ret "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" futureTask"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取结果")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ret:"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" ret"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 101")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("<3>线程池框架：底层 ThreadPoolExecutor")]),s._v(" "),t("p",[s._v("①ExecutorService threadPool = Executors.newFixedThreadPool(int); -- 池固定线程数")]),s._v(" "),t("p",[s._v("②ExecutorService threadPool = Executors.newSingleThreadExecutor(); -- 池一个线程")]),s._v(" "),t("p",[s._v("③ExecutorService threadPool = Executors.newCachedThreadPool(); -- 可扩容的，一池多线程")]),s._v(" "),t("p",[s._v("上述三种工作中用那种？一个都不用，工具类封装好的有界队列长度过大；用 ThreadPoolExecutor 自己创建")]),s._v(" "),t("p",[s._v("<4>线程池的 7 大重要参数")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadPoolExecutor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" corePoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" maximumPoolSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" keepAliveTime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" workQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadFactory")]),s._v(" threadFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RejectedExecutionHandler")]),s._v(" handler"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",[t("li",[s._v("corePoolSize : 线程池中的核心线程数")]),s._v(" "),t("li",[s._v("maximumPoolSize ：线程池能够容纳同时执行的最大线程数")]),s._v(" "),t("li",[s._v("keepAliveTime ： 多余的空闲线程的存活时间")]),s._v(" "),t("li",[s._v("TimeUnit unit ： keepAliveTime 的单位")]),s._v(" "),t("li",[t("code",[s._v("BlockingQueue<Runnable> workQueue")]),s._v("：阻塞任务队列，被提交但尚未被执行的任务")]),s._v(" "),t("li",[s._v("ThreadFactory threadFactory ：生成线程池中工作线程的线程工厂，用于创建线程，一般用默认的即可")]),s._v(" "),t("li",[s._v("RejectedExecutionHandler handler ： 拒绝策略，当队列满了并且工作线程数大于等于线程池的最大线程池时触发")])]),s._v(" "),t("p",[s._v("<5>线程池的底层工作原理")]),s._v(" "),t("p",[s._v("比如银行办公窗口满了，阻塞队列也满了（候客区），这个时候需要扩容银行的加班窗口，扩容后新进来的会直接抢占新扩容的加班窗口，若任务还在持续增加，会启动饱和拒绝策略，若任务量下降（多余空闲线程的存活时间）会缩容")]),s._v(" "),t("p",[s._v("<6>线程池的拒绝策略")]),s._v(" "),t("ul",[t("li",[s._v("AbortPolicy (默认)：直接抛出异常，阻止运行")]),s._v(" "),t("li",[s._v("CallerRunsPolicy : 调用者运行机制")]),s._v(" "),t("li",[s._v("DiscardOldestPolicy : 抛弃队列中等待最久的任务")]),s._v(" "),t("li",[s._v("DiscardPolicy : 直接丢弃任务，不处理也不抛弃\n自定义拒绝策略")])]),s._v(" "),t("p",[s._v("<7>合理配置线程池")]),s._v(" "),t("p",[s._v("CPU 密集型：CPU 核数+一个线程")]),s._v(" "),t("p",[s._v("IO 密集型：")]),s._v(" "),t("p",[s._v("① 任务线程并不是一直在执行任务，应配置尽可能多的线程，如 CPU 核数*2")]),s._v(" "),t("p",[s._v("② 大部分线程都阻塞，需要多配置线程数，参考公式：CPU 核数 / (1 - 阻塞系数) -- 阻塞系数在 0.8-0.9 之间")]),s._v(" "),t("h4",{attrs:{id:"阻塞队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阻塞队列"}},[s._v("#")]),s._v(" 阻塞队列")]),s._v(" "),t("p",[s._v("可以使拥挤的线程进行等待，避免任务拥挤造成失败（自己理解）")]),s._v(" "),t("p",[s._v("多线程领域的阻塞，在某些情况下会挂起线程（阻塞），一旦条件满足，被挂起的线程又会自动被唤醒")]),s._v(" "),t("p",[s._v("① 阻塞队列有没有好的一面：BlockingQueue 可以不用关心阻塞和唤醒，BlockingQueue 全包")]),s._v(" "),t("p",[s._v("② 不得不阻塞，你如何管理")]),s._v(" "),t("ul",[t("li",[s._v("当阻塞队列是空时，从队列中获取元素的操作会被阻塞")]),s._v(" "),t("li",[s._v("当阻塞队列是满时，往队列里添加元素的操作会被阻塞\n以上可以理解为蛋糕店，蛋糕柜为空时，消费者阻塞，蛋糕柜满时，生产者阻塞")])]),s._v(" "),t("p",[s._v("Collection 的实现类有 List 和 Queue")]),s._v(" "),t("p",[s._v("③Queue 的实现类有：BlockingQueue 接口")]),s._v(" "),t("p",[s._v("<1>ArrayBlockingQueue: 由数组结构组成的有界阻塞队列")]),s._v(" "),t("p",[s._v("<2>LinkedBlockingQueue : 由链表组成的有界阻塞队列（大小默认 Integer.MAX_VAL）")]),s._v(" "),t("p",[s._v("<3>PriorityBlockingQueue: 支持优先级排序的无界阻塞队列")]),s._v(" "),t("p",[s._v("<4>DelayQueue : 使用优先级队列实现的延迟无界阻塞队列")]),s._v(" "),t("p",[s._v("<5>SynchronousQueue: 不存储元素的阻塞队列，也即单个元素的队列")]),s._v(" "),t("p",[s._v("<6>LinkedTransferQueue : 由链表结构组成的无界阻塞队列")]),s._v(" "),t("p",[s._v("<7>LinkedBlockingDeque : 由链表结构组成的双向阻塞队列")]),s._v(" "),t("p",[s._v("④ 阻塞队列的核心方法：ArrayBlockingQueue")]),s._v(" "),t("p",[s._v("<1>返回异常：add(e), remove(), element()")]),s._v(" "),t("p",[s._v("<2>返回特殊值：offer(e), poll(), peek() -- 成功：true;失败：false")]),s._v(" "),t("p",[s._v("<3>阻塞：put(3), take()")]),s._v(" "),t("p",[s._v("<4>超时退出：offer(e,time,unit),poll(time,unit)")]),s._v(" "),t("p",[s._v("⑤ 阻塞队列用在哪里？")]),s._v(" "),t("p",[s._v("Syncronized - ReentrantLock")]),s._v(" "),t("p",[s._v("【注】多线程企业级模块口诀：线程操作资源类，判断-干活-唤醒通知，严防多线程状态下的虚假唤醒")]),s._v(" "),t("p",[s._v("<1>生产者消费者模式")]),s._v(" "),t("p",[s._v("<2>线程池")]),s._v(" "),t("p",[s._v("<3>消息中间件：生产一个，消费一个")]),s._v(" "),t("p",[s._v("⑥Syncronized-ReentrantLock 区别")]),s._v(" "),t("p",[s._v("Syncronized: JVM 层面，java 关键字，底层 monitor，不需要手动释放")]),s._v(" "),t("p",[s._v("不可中断，除非抛出异常或正常运行完成，非公平锁，要么唤醒一个线程，要么唤醒全部线程")]),s._v(" "),t("p",[s._v("ReentrantLock: api 层面，类，需要手动释放，可中断，可设置超时方法也可在代码块中调用 interrupt 方法，默认非公平锁，构造方法传 true 为公平锁，可以用来实现分组唤醒需要的线程们（精准唤醒）")]),s._v(" "),t("p",[s._v("练习：ABC 三个线程，A 打印 5 次，B 打印 10 次，C 打印 15 次，循环 3 次，按顺序")]),s._v(" "),t("p",[s._v("生产消费队列代码")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n * 资源类\n */")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyResource")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FLAG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 默认开启生产者消费")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AtomicInteger")]),s._v(" atomicInteger "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AtomicInteger")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" blockingQueue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyResource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BlockingQueue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" blockingQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("blockingQueue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" blockingQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 生产者\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("myProd")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FLAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" atomicInteger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("incrementAndGet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            retValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" blockingQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SECONDS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"生产一个蛋糕成功"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"生产一个蛋糕失败"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SECONDS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"线程停止了生产"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 消费者\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("consumer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FLAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            retValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" blockingQueue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SECONDS")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("retValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("equalsIgnoreCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FLAG")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2s没有收到蛋糕停止"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"消费了一个蛋糕"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" retValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main线程停止了生产"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br")])]),t("h4",{attrs:{id:"futuretask"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#futuretask"}},[s._v("#")]),s._v(" FutureTask")]),s._v(" "),t("h4",{attrs:{id:"lock-和-condition"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lock-和-condition"}},[s._v("#")]),s._v(" Lock 和 Condition")]),s._v(" "),t("p",[s._v("LockSupport")]),s._v(" "),t("h4",{attrs:{id:"并发工具类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并发工具类"}},[s._v("#")]),s._v(" 并发工具类")]),s._v(" "),t("p",[s._v("①CountDownLatch : 秦灭六国一统华夏，线程减到 0 才执行主线程（减法）")]),s._v(" "),t("p",[s._v("②CyclicBarrier : 集齐七龙珠，可以召唤神龙 （加法）")]),s._v(" "),t("p",[s._v("③Semaphore：信号灯，多个线程抢多份资源，示例：抢车位")]),s._v(" "),t("p",[s._v("作用：一个是用于多个共享资源的互斥使用，另一个用于并发线程数的控制")]),s._v(" "),t("h4",{attrs:{id:"countdownlatch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#countdownlatch"}},[s._v("#")]),s._v(" CountDownLatch")]),s._v(" "),t("ul",[t("li",[s._v("闭锁（倒计时锁），正数计数器，countDown()减操作，await()等待计数器到达 0")]),s._v(" "),t("li",[s._v("控制线程执行的先后顺序")]),s._v(" "),t("li",[s._v("实现原理：\n"),t("ul",[t("li",[s._v("维护内部类 Sync，Sync 继承自 AbstractQueuedSynchronizer")]),s._v(" "),t("li",[s._v("AbstractQueuedSynchronizer 中有一个变量 private volatile int state;保证了 state 变量的可见性")]),s._v(" "),t("li",[s._v("构造 Sync(state)执行 setState(state)操作")]),s._v(" "),t("li",[s._v("await()等待的是 state == 0")])])])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n* 放学了，等待学生走完后，值日生开始值日\n**/")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CountDownLatchDemo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" students "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CountDownLatch")]),s._v(" countDownLatch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CountDownLatch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" students"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"同学离开教室"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                countDownLatch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("countDown")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        countDownLatch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("await")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"值日生开始值日"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h4",{attrs:{id:"cyclicbarrier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cyclicbarrier"}},[s._v("#")]),s._v(" CyclicBarrier")]),s._v(" "),t("h4",{attrs:{id:"semaphore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#semaphore"}},[s._v("#")]),s._v(" Semaphore")]),s._v(" "),t("h4",{attrs:{id:"死锁编码及定位分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#死锁编码及定位分析"}},[s._v("#")]),s._v(" 死锁编码及定位分析")]),s._v(" "),t("p",[s._v("<1>产生死锁的原因：系统资源不足，进程运行推进的顺序不合适，资源分配不当")]),s._v(" "),t("p",[s._v("<2>解决：jps 定位进程，jstack 找到死锁进程查看")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("临界区")]),s._v(" "),t("p",[s._v("​ 代码的一个区间，如果两个线程同时执行就有可能出问题，所以需要互斥锁来保护")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Obj")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" method "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 临界区 -- start")]),s._v("\n    count"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 临界区 -- end")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("互斥锁")]),s._v(" "),t("p",[s._v("广义上讲可以值所有实现互斥作用的同步机制。狭义上讲指的就是 mutex 这种特定的二元锁机制。")]),s._v(" "),t("p",[s._v("互斥量")]),s._v(" "),t("p",[s._v("保证同一时刻只有一个线程进入临界区代码片段的锁叫**“互斥量”**。")]),s._v(" "),t("p",[s._v("信号量（semaphore）")]),s._v(" "),t("p",[s._v('把互斥锁推广到"N"的空间，同时允许有 N 个线程进入临界区的锁叫**“信号量”**。')]),s._v(" "),t("p",[s._v("一种更高级的同步机制，mutex 可以说是 semaphore 在仅取值 0/1 时的特例。Semaphore 可以有更多的取值空间，用来实现更加复杂的同步，而不单单是线程间互斥。")]),s._v(" "),t("p",[s._v("自旋锁")]),s._v(" "),t("p",[s._v("是一种互斥锁的实现方式而已，相比一般的互斥锁会在等待期间放弃 cpu，自旋锁（spinlock）则是不断循环并测试锁的状态，这样就一直占着 cpu。")]),s._v(" "),t("ul",[t("li",[s._v("一种有名的无锁算法,不使用锁的情况下实现多线程间变量的同步")]),s._v(" "),t("li",[s._v("尝试获取锁的线程不会立即阻塞，而是反复尝试的去获得锁，好处是减少上下文切换的消耗，缺点是消耗 cpu")]),s._v(" "),t("li",[s._v("是一种基于 CAS 的锁，此时比较并交换的类型变成了线程(Thread)")])]),s._v(" "),t("p",[s._v("实现思想：")]),s._v(" "),t("p",[s._v("AtomicInteger - > getAndIncrement -> unsafe.getAndAddInt")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Unsafe")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAndAddInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" delta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getIntVolatile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("weakCompareAndSetInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" delta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("hr"),s._v(" "),t("p",[s._v("竞态条件：即多个线程同时读写某个字段")]),s._v(" "),t("p",[s._v("竞态资源：竞态条件下多线程争抢的资源")]),s._v(" "),t("p",[s._v("轮询忙等")]),s._v(" "),t("p",[s._v("锁变量")]),s._v(" "),t("p",[s._v("原子性")]),s._v(" "),t("p",[s._v("TSL 指令：原子性地完成“检查-占锁”的动作。")]),s._v(" "),t("p",[s._v("阻塞")]),s._v(" "),t("p",[s._v("睡眠")]),s._v(" "),t("p",[s._v("唤醒")]),s._v(" "),t("p",[s._v("管程：把互斥量交给程序员使用太危险，有些编程语言实现了**“管程”**的特性，从编译器的层面保证了临界区的互斥，比如 Java 的 synchronized 关键字。")]),s._v(" "),t("p",[s._v("最后，不要钻这些名词的牛角尖，更重要的是理解这些东西背后的原理，叫什么名字并没有什么好说的。这些东西在不同的语言和平台上又有可能会有不同的叫法，其实本质上就这么回事。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("ReentrantReadWriteLock 读写锁; "),t("strong",[s._v("读读共享、写写互斥、读写互斥、写读互斥")])]),s._v(" "),t("hr"),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"java-运行时内存结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-运行时内存结构"}},[s._v("#")]),s._v(" Java 运行时内存结构")]),s._v(" "),t("p",[s._v("![2021-06-21 am9.49.59](https://muyids.oss-cn-beijing.aliyuncs.com/2021-06-21 am9.49.59-4240218.png)")]),s._v(" "),t("p",[s._v("红色区域是各个线程独有的，不会出现线程安全问题；而蓝色区域是线程共享的，其中 java 堆区存放的是对象，方法区存放的是类信息、常量、静态变量等数据，当多个线程在竞争其中一些数据时，需要锁机制对其进行限制。")]),s._v(" "),t("h2",{attrs:{id:"简述-jvm-对象、对象头信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简述-jvm-对象、对象头信息"}},[s._v("#")]),s._v(" 简述 JVM 对象、对象头信息")]),s._v(" "),t("p",[s._v("![2021-06-21 am10.06.32](https://muyids.oss-cn-beijing.aliyuncs.com/2021-06-21 am10.06.32.png)")]),s._v(" "),t("p",[s._v("常用的 Hotspot 虚拟机中，对象在内存中布局实际包含 3 个部分：")]),s._v(" "),t("ul",[t("li",[s._v("对象头")]),s._v(" "),t("li",[s._v("实例数据")]),s._v(" "),t("li",[s._v("对齐填充")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/v2-bb7e2989c375f870122a61fcf8b9cf79_1440w.jpg",alt:"img"}})]),s._v(" "),t("p",[s._v("对象头包含两部分：")]),s._v(" "),t("ul",[t("li",[s._v("对象自身运行时所需的数据（Mark Word)：包含对象的 hashcode、分代年龄、轻量级锁指针、重量级锁指针、GC 标记、偏向锁线程 ID、偏向锁时间戳")]),s._v(" "),t("li",[s._v("存储类型指针（Class Pointer）：指向类的元数据的指针，保存了当前对象类型所在方法区中的类型数据")]),s._v(" "),t("li",[s._v("如果是数组的话，还包含数组长度")])]),s._v(" "),t("p",[s._v("![2021-06-21 am10.09.30](https://muyids.oss-cn-beijing.aliyuncs.com/2021-06-21 am10.09.30.png)")]),s._v(" "),t("p",[s._v("锁的四种状态：无锁、偏向锁、轻量级锁、重量级锁")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("无锁")]),s._v(" "),t("p",[s._v("无锁的情况，性能是最高的")]),s._v(" "),t("p",[s._v("<1>无竞争")]),s._v(" "),t("p",[s._v("<2>存在竞争，非锁方式同步线程 CAS")])]),s._v(" "),t("li",[t("p",[s._v("偏向锁")]),s._v(" "),t("p",[s._v("对象认识这个线程，这个对象的锁偏爱这个线程（不需要线程切换，效率较高）")]),s._v(" "),t("p",[s._v("实现方式：通过锁标志位 01，判断是否偏向锁 1， 读取前 23 位 线程 ID 确认当前想要获得对象锁的线程")]),s._v(" "),t("p",[s._v("如果当前不仅有一个线程想要获取该对象，会升级为轻量级锁")])]),s._v(" "),t("li",[t("p",[s._v("轻量级锁")]),s._v(" "),t("p",[s._v("<1>当一个线程想要获取某个对象的锁时，假如看到锁标志位为 00， 那么就知道是 轻量级锁")]),s._v(" "),t("p",[s._v("<2>这时，线程会在自己的"),t("strong",[s._v("线程虚拟机栈")]),s._v("中开辟一块 "),t("strong",[s._v("Lock Record")]),s._v(" 空间； Lock Record 存放的是 Mark Word 的副本、owner 对象的指针（指向该对象）；对象头前 30bit 记录了指向 Lock Record 的指针；完成了线程和对象的绑定，线程抢到了该对象的锁；")]),s._v(" "),t("p",[s._v("<3>其他线程也想要获取该对象怎么办？")]),s._v(" "),t("p",[s._v("自旋等待。")])]),s._v(" "),t("li",[t("p",[s._v("重量级锁")]),s._v(" "),t("p",[s._v("自旋等待的线程数超过 1 个，轻量级锁升级为重量级锁，通过 monitor 对线程进行管控；")])])]),s._v(" "),t("hr"),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"悲观锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#悲观锁"}},[s._v("#")]),s._v(" "),t("strong",[s._v("悲观锁")])]),s._v(" "),t("ul",[t("li",[s._v("悲观锁是就是悲观思想，即认为"),t("strong",[s._v("写多")]),s._v("，遇到"),t("strong",[s._v("并发写的可能性高")])]),s._v(" "),t("li",[s._v("每次去拿数据的时候都认为别人会修改，所以每次在读写数据的时候都会上锁，这样别人想读写这个数据就会 block 直到拿到锁")]),s._v(" "),t("li",[s._v("java 中的悲观锁就是 Synchronized。AQS 框架下的锁则是先尝试 cas 乐观锁去获取锁，获取不到，才会转换为悲观锁，如 RetreenLock。")])]),s._v(" "),t("p",[s._v("悲观锁 使用 互斥锁来实现，性能很低")]),s._v(" "),t("h2",{attrs:{id:"乐观锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#乐观锁"}},[s._v("#")]),s._v(" "),t("strong",[s._v("乐观锁")])]),s._v(" "),t("ul",[t("li",[s._v("乐观锁是一种乐观思想，即认为"),t("strong",[s._v("读多写少")]),s._v("，遇到并发写的可能性低")]),s._v(" "),t("li",[s._v("每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这个数据，采取在写时先读出当前版本号，然后加锁操作（比较跟上一次的版本号，如果一样则更新），如果失败则要重复读-比较-写的操作。")]),s._v(" "),t("li",[s._v("java 中的乐观锁基本都是通过 "),t("strong",[s._v("CAS 操作")]),s._v(" 实现的，CAS 是一种更新的原子操作，比较当前值跟传入值是否一样，一样则更新，否则失败。")])]),s._v(" "),t("h2",{attrs:{id:"用过-aqs-吗-有具体的例子可以说说吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用过-aqs-吗-有具体的例子可以说说吗"}},[s._v("#")]),s._v(" 用过 AQS 吗，有具体的例子可以说说吗")]),s._v(" "),t("p",[s._v("AQS: AbstractQueuedSynchronizer (java.util.concurrent.locks)")]),s._v(" "),t("p",[s._v("AQS 成员变量：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Head of the wait queue, lazily initialized.\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transient")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" head"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Tail of the wait queue. After initialization, modified only via casTail.\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transient")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" tail"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * The synchronization state.\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" state"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"看过-juc-源码吗-聊一聊具体实现吧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#看过-juc-源码吗-聊一聊具体实现吧"}},[s._v("#")]),s._v(" 看过 JUC 源码吗，聊一聊具体实现吧")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Unsafe.java")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@HotSpotIntrinsicCandidate")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getAndAddInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" delta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getIntVolatile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("weakCompareAndSetInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" v "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" delta"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自旋操作")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" v"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// native根据不同平台调用不同C++代码")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Atomically updates Java variable to {@code x} if it is currently\n     * holding {@code expected}.\n     *\n     * <p>This operation has memory semantics of a {@code volatile} read\n     * and write.  Corresponds to C11 atomic_compare_exchange_strong.\n     *\n     * @return {@code true} if successful\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@HotSpotIntrinsicCandidate")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("native")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareAndSetInt")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" offset"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                                 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" expected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                                                 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("h3",{attrs:{id:"reentrantlock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[s._v("#")]),s._v(" ReentrantLock")]),s._v(" "),t("ul",[t("li",[s._v("ReentrantLock 基于 AQS("),t("strong",[s._v("AbstractQueuedSynchronizer 抽象队列同步器")]),s._v(")实现")]),s._v(" "),t("li",[s._v("AQS 原理\n"),t("ul",[t("li",[s._v("AQS 内部维护一个 state 状态位，尝试加锁的时候通过 CAS 修改值")]),s._v(" "),t("li",[s._v("如果 state 置为 1，且当前线程 ID 赋值，代表加锁成功")]),s._v(" "),t("li",[s._v("一旦获取锁，其他线程进入阻塞队列自旋")]),s._v(" "),t("li",[s._v("释放锁：唤醒阻塞队列中的线程，state 置为 0，线程 ID 置空\n"),t("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/v2-b4ff47cd91144a6c0301511312bb72ff_1440w.jpg",alt:"img"}})])])])]),s._v(" "),t("p",[t("strong",[s._v("synchronized 和 RetreenLock 锁区别")])]),s._v(" "),t("p",[s._v("现在基本都是用 JDK7 和 JDK8 的版本，ReentrantLock 的效率和 synchronized 区别基本可以持平了，区别如下：")]),s._v(" "),t("ul",[t("li",[s._v("synchronized 是 java 关键字，RetreenLock 是个 java 类")]),s._v(" "),t("li",[s._v("ReentrantLock 需要显式的获取锁和释放锁")]),s._v(" "),t("li",[s._v("等待可中断；持有锁的线程长时间不释放，等待中的线程可以放弃等待")]),s._v(" "),t("li",[s._v("公平锁：synchronized 和 ReentrantLock 默认都是非公平锁；ReentrantLock 可以通过构造函数传参改变。只不过使用公平锁的话会导致性能急剧下降。")]),s._v(" "),t("li",[s._v("绑定多个条件：ReentrantLock 可以同时绑定多个 Condition 条件对象。")]),s._v(" "),t("li",[s._v("synchronized 无法获取锁状态，RetreenLock 可以判断是否持有锁")]),s._v(" "),t("li",[s._v("synchronized 不可重入，不可中断，而 RetreenLock 可重入，可中断")])]),s._v(" "),t("hr"),s._v(" "),t("ol",[t("li",[s._v("创建线程有哪几种方式？（a.继承 Thread 类;b.实现 Runnable 接口;c. 使用 Executor 框架;d.使用 FutureTask）")]),s._v(" "),t("li",[s._v("说说 "),t("code",[s._v("sleep()")]),s._v(" 方法和 "),t("code",[s._v("wait()")]),s._v(" 方法区别和共同点?")]),s._v(" "),t("li",[s._v("Java 内存模型（JMM）、重排序与 happens-before 原则了解吗？")]),s._v(" "),t("li",[t("code",[s._v("synchronized")]),s._v(" 关键字、volatile 关键字")]),s._v(" "),t("li",[t("code",[s._v("ThreadLocal")]),s._v(" 有啥用（解决了什么问题）？怎么用？原理了解吗？内存泄露问题了解吗？")]),s._v(" "),t("li",[s._v("为什么要用线程池？"),t("code",[s._v("ThreadPoolExecutor")]),s._v(" 类的重要参数了解吗？"),t("code",[s._v("ThreadPoolExecutor")]),s._v(" 饱和策略了解吗？线程池原理了解吗？几种常见的线程池了解吗？为什么不推荐使用"),t("code",[s._v("FixedThreadPool")]),s._v("？如何设置线程池的大小？")]),s._v(" "),t("li",[s._v("AQS 了解么？原理？AQS 常用组件："),t("code",[s._v("Semaphore")]),s._v(" (信号量)、"),t("code",[s._v("CountDownLatch")]),s._v(" （倒计时器） "),t("code",[s._v("CyclicBarrier")]),s._v("(循环栅栏)")]),s._v(" "),t("li",[t("code",[s._v("ReentrantLock")]),s._v(" 、 "),t("code",[s._v("ReentrantReadWriteLock")]),s._v(" 、"),t("code",[s._v("StampedLock")]),s._v("（JDK8）")]),s._v(" "),t("li",[s._v("CAS 了解么？原理？")]),s._v(" "),t("li",[s._v("Atomic 原子类")]),s._v(" "),t("li",[s._v("并发容器："),t("code",[s._v("ConcurrentHashMap")]),s._v(" 、 "),t("code",[s._v("CopyOnWriteArrayList")]),s._v(" 、 "),t("code",[s._v("ConcurrentLinkedQueue")]),s._v(" "),t("code",[s._v("BlockingQueue")]),s._v(" 、"),t("code",[s._v("ConcurrentSkipListMap")])]),s._v(" "),t("li",[t("code",[s._v("Future")]),s._v(" 和 "),t("code",[s._v("CompletableFuture")])]),s._v(" "),t("li",[s._v("......")])]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("线程")]),s._v(" "),t("ul",[t("li",[s._v("基础")]),s._v(" "),t("li",[s._v("互斥")]),s._v(" "),t("li",[s._v("同步")])]),s._v(" "),t("p",[s._v("JUC 包")]),s._v(" "),t("p",[s._v("​ 道格李")]),s._v(" "),t("p",[s._v("​ 锁")]),s._v(" "),t("p",[s._v("AQS")]),s._v(" "),t("p",[s._v("​ JUC 包的核心")]),s._v(" "),t("p",[s._v("​ Java 并发编程的核心")]),s._v(" "),t("p",[s._v("AQS:抽象队列同步器")]),s._v(" "),t("p",[s._v("并发编程问的比较多的，volatile, syncronize, AQS, ReentrantLock")]),s._v(" "),t("p",[s._v("六个操作：")]),s._v(" "),t("p",[s._v("<1>抢锁")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("看锁的标志位，默认是 0，这时候有线程抢到锁，修改锁的标志位")]),s._v(" "),t("p",[s._v("用到了 CAS 机制")])]),s._v(" "),t("li",[t("p",[s._v("有线程占有了锁，这时候有线程来抢锁")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("当前来抢锁的线程是不是占有锁的线程")]),s._v(" "),t("p",[s._v("是，重入，state+1")]),s._v(" "),t("p",[s._v("为什么要记录次数？因为释放的时候需要释放对应 的次数")])]),s._v(" "),t("li",[t("p",[s._v("如果不是，抢锁失败")])])])]),s._v(" "),t("li",[t("p",[s._v("优化：看等待区有没有人，如果有人，锁肯定被占用了")]),s._v(" "),t("p",[s._v("如何判断有人在等待？")]),s._v(" "),t("p",[s._v("hasQueuedPredecessors")])])]),s._v(" "),t("p",[s._v("公平锁、非公平锁存在差异的地方")]),s._v(" "),t("p",[s._v("唯一的差别就是一个临界区:")]),s._v(" "),t("p",[s._v("<2>释放锁")]),s._v(" "),t("p",[s._v("<3>入队")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("队列中有没有节点")]),s._v(" "),t("p",[s._v("没有")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("正常队列")]),s._v(" "),t("ol",[t("li",[s._v("生成一个节点")])])]),s._v(" "),t("li",[t("p",[s._v("AQS 队列")]),s._v(" "),t("p",[s._v("生成两个节点")])])]),s._v(" "),t("p",[s._v("有")]),s._v(" "),t("p",[s._v("​ 尾部插入")]),s._v(" "),t("p",[s._v("中部插入")]),s._v(" "),t("p",[s._v("​ AQS 中是不存在这个情况的")])])]),s._v(" "),t("p",[s._v("<4>出队")]),s._v(" "),t("p",[s._v("<5>阻塞")]),s._v(" "),t("p",[s._v("<6>唤醒")]),s._v(" "),t("p",[s._v("CLH 算法：")]),s._v(" "),t("p",[s._v("​ 自旋锁算法")]),s._v(" "),t("p",[s._v("队列")]),s._v(" "),t("ul",[t("li",[s._v("AQS 式的队列")]),s._v(" "),t("li",[s._v("普通的队列")])]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("ReentrantLock")]),s._v(" "),t("p",[s._v("底层是 AQS")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token import"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("concurrent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("locks"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReentrantLock")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ThreadTest_01")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" val "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReentrantLock")]),s._v(" lock "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReentrantLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" d "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                val"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        t3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            t2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            t3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br")])]),t("p",[s._v("公平锁 & 非公平锁")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReentrantLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非公平锁")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ReentrantLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 公平锁")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("差别？")]),s._v(" "),t("p",[s._v("解决问题的思路：")]),s._v(" "),t("p",[s._v("场景：银行办业务")]),s._v(" "),t("p",[s._v("1、看办理的人多不多，不多就直接去柜台，多就排队")]),s._v(" "),t("p",[s._v("2、等待区")]),s._v(" "),t("p",[s._v("3、如果行长小舅子来办业务，不需要排队，柜台空了就直接去办")]),s._v(" "),t("p",[s._v("​ 非公平锁")]),s._v(" "),t("p",[s._v("4、过号了，重排")]),s._v(" "),t("p",[s._v("AQS 代码分析：https://www.bilibili.com/video/BV1pz4y1U7JS/")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("nodejs 多线程编程")]),s._v(" "),t("p",[s._v("简单的多线程")]),s._v(" "),t("p",[s._v("nodejs 是单线程模型，怎么利用 cpu 的多核优势呢？比如我们有 100 万个任务，CPU 是 32 核，如何多线程执行任务")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asyncMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Promise")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reject")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" cpu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nums"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("asyncMethod")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("多线程通信")]),s._v(" "),t("p",[s._v("一旦涉及到多线程，那么线程间同步就必不可少，否则无法解决临界区的问题")]),s._v(" "),t("p",[s._v("多线程间的同步一般需要依赖锁，而锁的实现需要依赖于全局变量。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("JUC")]),s._v(" "),t("p",[s._v("Java.util.concurrent")]),s._v(" "),t("h3",{attrs:{id:"进程和线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程"}},[s._v("#")]),s._v(" 进程和线程")]),s._v(" "),t("p",[s._v("概念：")]),s._v(" "),t("p",[s._v("进程：一个程序就是一个进程")]),s._v(" "),t("p",[s._v("线程：操作系统运算调度的最小单位")]),s._v(" "),t("p",[s._v("线程的状态：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("public enum State {\n\tNEW,\n\tRUNNABLE,\n\tBLOCKED,\n\tWAITING,\n\tTIMED_WAITING,\n\tTERMINATED;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("wait 和 sleep 的区别：")]),s._v(" "),t("ul",[t("li",[s._v("sleep 是 Thread 的静态方法，wait 是 Object 的方法，任何对象实例都能调用")]),s._v(" "),t("li",[s._v("sleep 不会释放锁，他也不需要占用锁；wait 会释放锁，但调用他的前提是当前线程占有锁（即代码再 synchronized 中）")]),s._v(" "),t("li",[s._v("都可以被 interrupted 方法中断")])]),s._v(" "),t("p",[s._v("并发和并行")]),s._v(" "),t("p",[s._v("并行：同一时刻多个指令同时执行")]),s._v(" "),t("p",[s._v("并发：同一时刻只有一条指令执行")]),s._v(" "),t("p",[s._v("管程：")]),s._v(" "),t("ul",[t("li",[s._v("Monitor 监视器 -> 锁")]),s._v(" "),t("li",[s._v("是一种同步机制，保证同一时间，只有一个线程访问被保护的资源")]),s._v(" "),t("li",[s._v("jvm 同步进入和退出，使用管程对象实现")])]),s._v(" "),t("p",[s._v("用户线程和守护线程")]),s._v(" "),t("ul",[t("li",[s._v("用户线程：自定义线程")]),s._v(" "),t("li",[s._v("守护线程：后台线程，比如垃圾回收")])]),s._v(" "),t("h2",{attrs:{id:"lock-接口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lock-接口"}},[s._v("#")]),s._v(" Lock 接口")]),s._v(" "),t("p",[s._v("synchronized 作用范围：")]),s._v(" "),t("p",[s._v("多线程编程步骤：")]),s._v(" "),t("ol",[t("li",[s._v("创建资源类，在资源类创建属性和操作方法")]),s._v(" "),t("li",[s._v("创建多个线程，调用资源类的操作方法")]),s._v(" "),t("li")]),s._v(" "),t("hr"),s._v(" "),t("ol",[t("li",[t("p",[s._v("什么是线程和进程? 线程与进程的关系,区别及优缺点？")]),s._v(" "),t("p",[s._v("A:")]),s._v(" "),t("p",[s._v("进程：应用程序在内存中分配的空间，也就是正在运行的程序；")]),s._v(" "),t("p",[s._v("线程：一个进程可能有多个线程，每个线程负责一个单独的子任务")]),s._v(" "),t("p",[s._v("区别：")]),s._v(" "),t("ol",[t("li",[s._v("进程是操作系统进行资源分配的基本单位，线程是操作系统 CPU 调度的基本单位")]),s._v(" "),t("li",[s._v("进程占有独立的内存空间\n"),t("ul",[t("li",[s._v("进程间内存隔离，数据共享复杂但同步简单，各进程互不干扰；线程共享进程的内存空间，数据共享简单但同步复杂")]),s._v(" "),t("li",[s._v("一个进程出现问题不会影响其他进程，可靠性高；一个线程出问题，可能影响整个进程，可靠性低")]),s._v(" "),t("li",[s._v("进程开销大，创建和销毁不仅需要保存寄存器和栈信息，还需要资源的分配回收和调度；线程只需要保存寄存器和栈信息，开销小；")])])])])]),s._v(" "),t("li",[t("p",[s._v("说说并发与并行的区别?")])]),s._v(" "),t("li",[t("p",[s._v("为什么要使用多线程呢?")])]),s._v(" "),t("li",[t("p",[s._v("使用多线程可能带来什么问题?（内存泄漏、死锁、线程不安全等等）")])]),s._v(" "),t("li",[t("p",[s._v("说说线程的生命周期和状态?")])]),s._v(" "),t("li",[t("p",[s._v("什么是上下文切换?")]),s._v(" "),t("p",[s._v("A: CPU 采用时间片轮转的方式运行进程：CPU 为每个进程分配一个时间段，称作它的时间片。如果时间片结束时，进程还在运行，则暂停这个进程的运行，并且 CPU 分配给另一个进程（这个过程叫做上下文切换）；如果进程在时间片结束前阻塞或结束，则 CPU 立即进行切换，不用等时间片用完。")])]),s._v(" "),t("li",[t("p",[s._v("什么是线程死锁?如何避免死锁?")])])]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("上课时间：20：00 主讲老师：马士兵")]),s._v(" "),t("p",[s._v("1、为什么早期计算机只有进程没有线程？\n2、进程、线程、协程的区别是什么？\n3、现代 CPU 架构给多线程编程带来了哪些挑战？\n4、三级缓存架构造成的可见性问题如何解决？\n5、内存屏障是如何解决代码乱序性问题的？\n6、为什么阿里京东都喜欢问 JUC？\n7、\n8、\n9、有哪些同步队列可以用于线程池？\n10、Exchanger 交换器适用于什么场景？\n11、各种同步器在大厂面试中的综合运用怎么做？")]),s._v(" "),t("p",[s._v("首次公开：从 CPU 架构的角度理解底层高并发的构成。 上课链接：https://ke.qq.com/course/399017?taid=10573088496686761&tuin=a028e035")]),s._v(" "),t("p",[s._v("优惠活动倒计时 2 天，报名预定私聊小姐姐")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("图灵--周瑜老师新课带你快速掌握")]),s._v(" "),t("p",[s._v("---重磅来袭 ReentrantLock 底层原理与源码深度解析")]),s._v(" "),t("p",[s._v("1、公平锁与非公平锁原理解析\n2、AQS 底层原理与源码深度分析\n3、利用自旋锁与 park 实现一把锁\n4、加锁方法底层源码逐行讲解\n5、解锁方法底层源码逐行讲解\n6、总结公平锁与非公平锁真正的区别\n7、CountDownLatch 底层原理源码分析\n8、Semaphore 底层原理源码分析")])])}),[],!1,null,null,null);t.default=e.exports}}]);