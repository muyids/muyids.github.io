(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{383:function(t,s,a){"use strict";a.r(s);var e=a(14),i=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"偏离的工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#偏离的工作"}},[t._v("#")]),t._v(" 偏离的工作")]),t._v(" "),s("p",[t._v("现在我们已经知道了如何从其它地方 "),s("code",[t._v("pull")]),t._v(" 提交记录，以及如何 "),s("code",[t._v("push")]),t._v(" 我们自己的变更。看起来似乎没什么难度，但是为何还会让人们如此困惑呢？")]),t._v(" "),s("p",[t._v("困难来自于远程库提交历史的"),s("strong",[t._v("偏离")]),t._v("。在讨论这个问题的细节前，我们先来看一个例子……")]),t._v(" "),s("p",[t._v("假设你周一克隆了一个仓库，然后开始研发某个新功能。到周五时，你新功能开发测试完毕，可以发布了。但是 —— 天啊！你的同事这周写了一堆代码，还改了许多你的功能中使用的 API，这些变动会导致你新开发的功能变得不可用。但是他们已经将那些提交推送到远程仓库了，因此你的工作就变成了基于项目"),s("strong",[t._v("旧版")]),t._v("的代码，与远程仓库最新的代码不匹配了。")]),t._v(" "),s("p",[t._v("这种情况下, "),s("code",[t._v("git push")]),t._v(" 就不知道该如何操作了。如果你执行 "),s("code",[t._v("git push")]),t._v("，Git 应该让远程仓库回到星期一那天的状态吗？还是直接在新代码的基础上添加你的代码，亦或由于你的提交已经过时而直接忽略你的提交？")]),t._v(" "),s("p",[t._v("因为这情况（历史偏离）有许多的不确定性，Git 是不会允许你 "),s("code",[t._v("push")]),t._v(" 变更的。实际上它会强制你先合并远程最新的代码，然后才能分享你的工作。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230211085728274.png",alt:"image-20230211085728274"}})]),t._v(" "),s("p",[t._v("执行 "),s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",[s("semantics",[s("mrow",[s("mi",[t._v("g")]),s("mi",[t._v("i")]),s("mi",[t._v("t")]),s("mtext"),s("mi",[t._v("p")]),s("mi",[t._v("u")]),s("mi",[t._v("s")]),s("mi",[t._v("h")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("git\\ push")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"strut",staticStyle:{height:"0.69444em"}}),s("span",{staticClass:"strut bottom",staticStyle:{height:"0.8888799999999999em","vertical-align":"-0.19444em"}}),s("span",{staticClass:"base textstyle uncramped"},[s("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),s("span",{staticClass:"mord mathit"},[t._v("i")]),s("span",{staticClass:"mord mathit"},[t._v("t")]),s("span",{staticClass:"mord mspace"}),s("span",{staticClass:"mord mathit"},[t._v("p")]),s("span",{staticClass:"mord mathit"},[t._v("u")]),s("span",{staticClass:"mord mathit"},[t._v("s")]),s("span",{staticClass:"mord mathit"},[t._v("h")])])])]),t._v(" 失败！")]),t._v(" "),s("p",[t._v("那该如何解决这个问题呢？很简单，你需要做的就是使你的工作基于最新的远程分支。")]),t._v(" "),s("p",[t._v("有许多方法做到这一点呢，不过最直接的方法就是通过 rebase 调整你的工作。咱们继续，看看怎么 rebase！")]),t._v(" "),s("p",[t._v("如果我们在 push 之前做 rebase 呢？")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase o/main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("我们用 "),s("code",[t._v("git fetch")]),t._v(" 更新了本地仓库中的远程分支，然后用 rebase 将我们的工作移动到最新的提交记录下，最后再用 "),s("code",[t._v("git push")]),t._v(" 推送到远程仓库。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230211085919053.png",alt:"image-20230211085919053"}})]),t._v(" "),s("p",[t._v("还有其它的方法可以在远程仓库变更了以后更新我的工作吗? 当然有，我们还可以使用 "),s("code",[t._v("merge")])]),t._v(" "),s("p",[t._v("尽管 "),s("code",[t._v("git merge")]),t._v(" 不会移动你的工作（它会创建新的合并提交），但是它会告诉 Git 你已经合并了远程仓库的所有变更。这是因为远程分支现在是你本地分支的祖先，也就是说你的提交已经包含了远程分支的所有变化。")]),t._v(" "),s("p",[t._v("咱们们用 merge 替换 rebase 来试一下……")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge o/main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);