(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{303:function(s,a,t){"use strict";t.r(a);var n=t(14),e=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"使用-lua-脚本的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-lua-脚本的好处"}},[s._v("#")]),s._v(" 使用 lua 脚本的好处")]),s._v(" "),a("ol",[a("li",[s._v("减少网络开销：本来 5 次网络请求的操作，可以用一个请求完成")]),s._v(" "),a("li",[s._v("原子操作：Redis 会将整个脚本作为一个整体执行，中间不会被其他命令插入")]),s._v(" "),a("li",[s._v("复用：客户端发送的脚本会永久存储在 Redis 中，意味着其他客户端可以复用这一脚本而不需要使用代码完成同样的逻辑。")])]),s._v(" "),a("h1",{attrs:{id:"准备条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备条件"}},[s._v("#")]),s._v(" 准备条件")]),s._v(" "),a("ul",[a("li",[s._v("redis 在服务器端内置 lua 解释器（版本 2.6 以上）")]),s._v(" "),a("li",[s._v("redis-cli 提供了"),a("code",[s._v("EVAL")]),s._v("与"),a("code",[s._v("EVALSHA")]),s._v("命令执行 Lua 脚本")])]),s._v(" "),a("h1",{attrs:{id:"redis-内置-lua-执行命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-内置-lua-执行命令"}},[s._v("#")]),s._v(" redis 内置 lua 执行命令")]),s._v(" "),a("h2",{attrs:{id:"eval-命令语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eval-命令语法"}},[s._v("#")]),s._v(" EVAL 命令语法")]),s._v(" "),a("blockquote",[a("p",[s._v("EVAL script numkeys key [key …] arg [arg …]")])]),s._v(" "),a("ul",[a("li",[s._v("EVAL —- lua 程序的运行环境上下文")]),s._v(" "),a("li",[s._v("script —- lua 脚本")]),s._v(" "),a("li",[s._v("numkeys —- 参数的个数(key 的个数)")]),s._v(" "),a("li",[s._v("key —- redis 键,访问下标从 1 开始,例如:KEYS[1]")]),s._v(" "),a("li",[s._v("arg —- redis 键的附加参数")])]),s._v(" "),a("h2",{attrs:{id:"evalsha-命令语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evalsha-命令语法"}},[s._v("#")]),s._v(" EVALSHA 命令语法")]),s._v(" "),a("blockquote",[a("p",[s._v("EVALSHA SHA1 numkeys key [key …] arg [arg …]")])]),s._v(" "),a("p",[s._v("EVALSHA 命令允许通过脚本的 SHA1 来执行(节省带宽)")]),s._v(" "),a("p",[s._v("Redis 在执行 EVAL/SCRIPT LOAD 后会计算脚本 SHA1 缓存, EVALSHA 根据 SHA1 取出缓存脚本执行")]),s._v(" "),a("h2",{attrs:{id:"redis-中管理-lua-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-中管理-lua-脚本"}},[s._v("#")]),s._v(" Redis 中管理 Lua 脚本")]),s._v(" "),a("ul",[a("li",[s._v("script load script 将 Lua 脚本加载到 Redis 内存中(如果 redis 重启则会丢失)")]),s._v(" "),a("li",[s._v("script exists sh1 [sha1 …] 判断 sha1 脚本是否在内存中")]),s._v(" "),a("li",[s._v("script flush 清空 Redis 内存中所有的 Lua 脚本")]),s._v(" "),a("li",[s._v("script kill 杀死正在执行的 Lua 脚本。（如果此时 Lua 脚本正在执行写操作，那么 script kill 将不会生效）\nRedis 提供了一个 lua-time-limit 参数，默认 5 秒，它是 Lua 脚本的超时时间,如果 Lua 脚本超时，其他执行正常命令的客户端会收到“Busy Redis is busy running a script”错误，但是不会停止脚本运行，此时可以使用 script kill 杀死正在执行的 Lua 脚本。")])]),s._v(" "),a("h2",{attrs:{id:"lua-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lua-函数"}},[s._v("#")]),s._v(" lua 函数")]),s._v(" "),a("p",[s._v("主要有两个函数来执行 redis 命令")]),s._v(" "),a("ul",[a("li",[s._v("redis.call() –- 出错时返回具体错误信息,并且终止脚本执行")]),s._v(" "),a("li",[s._v("redis.pcall() –- 出错时返回 lua table 的包装错误,但不引发错误\n使用流程如下：")])]),s._v(" "),a("ol",[a("li",[s._v("编写脚本")]),s._v(" "),a("li",[s._v("脚本提交到 REDIS 并获取 SHA")]),s._v(" "),a("li",[s._v("使用 SHA 调用 redis 脚本")])]),s._v(" "),a("h1",{attrs:{id:"redis-运行-lua-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-运行-lua-脚本"}},[s._v("#")]),s._v(" redis 运行 lua 脚本")]),s._v(" "),a("h2",{attrs:{id:"eval-直接运行脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eval-直接运行脚本"}},[s._v("#")]),s._v(" EVAL 直接运行脚本")]),s._v(" "),a("blockquote",[a("p",[s._v('EVAL "return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}" 2 key1 key2 first second')])]),s._v(" "),a("h2",{attrs:{id:"evalsha-使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evalsha-使用"}},[s._v("#")]),s._v(" EVALSHA 使用")]),s._v(" "),a("p",[s._v("需要"),a("code",[s._v("SCRIPT LOAD")]),s._v("和"),a("code",[s._v("EVALSHA")]),s._v("配合使用")]),s._v(" "),a("ol",[a("li",[s._v("SCRIPT LOAD 加载到内存，返回 SHA 签名")]),s._v(" "),a("li",[s._v("EVALSHA 使用已经存在的签名\n这样只用加载一次，便可重复使用已经加载的签名脚本，可以多次使用，避免长脚本输入")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('> SCRIPT LOAD "return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}"\n"a42059b356c875f0717db19a51f6aaca9ae659ea"\nEVALSHA "a42059b356c875f0717db19a51f6aaca9ae659ea" 2 key1 key2 first second\n1) "key1"\n2) "key2"\n3) "first"\n4) "second"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"在-redis-下使用脚本文件执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-redis-下使用脚本文件执行"}},[s._v("#")]),s._v(" 在 redis 下使用脚本文件执行")]),s._v(" "),a("p",[s._v("在路径下创建脚本文件，这里直接在"),a("code",[s._v("redis/bin")]),s._v("下创建，方便使用，其他目录可以使用全路径")]),s._v(" "),a("p",[a("code",[s._v("set.lua")])]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--[[ set.lua, redis的set命令使用\nredis: set key val\n--]]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'set'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("设置 k-v 值，运行命令")]),s._v(" "),a("blockquote",[a("p",[s._v("redis-cli --eval ./set.lua foo , bar")])]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("："),a("code",[s._v("redis-cli --eval set.lua foo , bar")]),s._v("，foo 和 bar 之间的逗号左右都有空格分隔,否则会当做一个字符串")]),s._v(" "),a("p",[s._v("通过 redis-cli 查看值")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> get foo\n"bar"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("get.lua")])]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--[[ get.lua, redis的get命令使用\nredis: get key\n--]]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("获取 k 值，运行命令")]),s._v(" "),a("blockquote",[a("p",[s._v("redis-cli --eval ./get.lua foo")])]),s._v(" "),a("p",[s._v("通常做法是")]),s._v(" "),a("ol",[a("li",[s._v("脚本文件保存到一个路径下或者数据库中，比如："),a("code",[s._v("/mnt/redis/lua/set.lua")])]),s._v(" "),a("li",[a("code",[s._v("SCRIPT LOAD")]),s._v(" 加载脚本文件内容，返回 SHA 签名保存到应对的值 K-V 值，(set,SHA)")]),s._v(" "),a("li",[s._v("获取对应脚本名称的 SHA 签名，如果存在则执行，否则进行第二步操作")])]),s._v(" "),a("h1",{attrs:{id:"实际开发应用实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际开发应用实战"}},[s._v("#")]),s._v(" 实际开发应用实战")]),s._v(" "),a("h2",{attrs:{id:"访问次数限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问次数限制"}},[s._v("#")]),s._v(" 访问次数限制")]),s._v(" "),a("p",[s._v("需求场景：限制用户在一段时间内只能访问某一资源限定次数")]),s._v(" "),a("p",[s._v("ratelimiting.lua")]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" times "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'incr'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" times "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expire'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" times "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tonumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("运行脚本（限定 10 秒内最多访问 3 次）：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("redis-cli --eval ratelimiting.lua rate.limitingl:127.0.0.1 , 10 3\n(integer) 1\nredis-cli --eval ratelimiting.lua rate.limitingl:127.0.0.1 , 10 3\n(integer) 1\nredis-cli --eval ratelimiting.lua rate.limitingl:127.0.0.1 , 10 3\n(integer) 1\nredis-cli --eval ratelimiting.lua rate.limitingl:127.0.0.1 , 10 3\n(integer) 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("rate.limitingl:127.0.0.1 是前缀+ip 组成的 KEY，用 KEYS[1]获取，")]),s._v(" "),a("li",[s._v('","后面的 10 和 3 是参数，在脚本中能够使用 ARGV[1]和 ARGV[2]获得\n命令的作用是将访问频率限制为每 10 秒最多 3 次，所以在终端中不断的运行此命令会发现当访问频率在 10 秒内小于或等于 3 次时返回 1，否则返回 0。')])]),s._v(" "),a("h2",{attrs:{id:"lua-实现-redis-分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lua-实现-redis-分布式锁"}},[s._v("#")]),s._v(" lua 实现 redis 分布式锁")]),s._v(" "),a("p",[s._v("分布式锁需要考虑的问题")]),s._v(" "),a("ol",[a("li",[s._v("失效时间；如果没有失效时间，当解锁失败时，就会导致锁记录一直在 tair 中，其他线程无法再获得到锁。")]),s._v(" "),a("li",[s._v("非阻塞：分布式锁应该是非阻塞的，无论成功还是失败都直接返回")]),s._v(" "),a("li",[s._v("非重入：一个线程获得锁之后，在释放锁之前，无法再次获得该锁")])]),s._v(" "),a("h3",{attrs:{id:"实现思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[s._v("#")]),s._v(" 实现思路")]),s._v(" "),a("p",[a("strong",[s._v("setnx")]),s._v("：如果 key 不存在则添加值并返回 1，如果已经存在 key 则返回 0")]),s._v(" "),a("p",[a("strong",[s._v("加锁")])]),s._v(" "),a("p",[s._v("使用业务 setnx(key,业务流水号)当加锁成功返回 1 时设置过期时间，避免业务异常没有解锁时防止死锁")]),s._v(" "),a("p",[a("strong",[s._v("重入锁")])]),s._v(" "),a("p",[s._v("当同一业务再次申请锁时，如果随机值相同 则认为是重试,则直接设置过期时长；如果随机值不同则直接返回 0，获取锁失败")]),s._v(" "),a("p",[a("strong",[s._v("解锁")])]),s._v(" "),a("p",[s._v("业务完成直接 del(key)完成")]),s._v(" "),a("p",[s._v("以上方案是很多客户端实现的方式，建立和释放锁，并保证绝对的安全，是这个锁的设计比较棘手的地方。有两个潜在的陷阱：")]),s._v(" "),a("ol",[a("li",[s._v("应用程序通过网络和 redis 交互，这意味着从应用程序发出命令到 redis 结果返回之间会有延迟。这段时间内，redis 可能正在运行其他的命令，而 redis 内数据的状态可能不是你的程序所期待的。如果保证程序中获取锁的线程和其他线程不发生冲突？")]),s._v(" "),a("li",[s._v("如果程序在获取锁后突然 crash，而无法释放它？这个锁会一直存在而导致程序进入“死锁”\n对于第一个问题，除了 pile 批量一次执行，目前只有 lua 脚本是在同一个线程中一次执行完的。\n第二个问题，如果在获取锁之后，设置 expire 之前发生了异常，那么这个 key-v 永远都不会过期，即便是 lua 脚本也是一样会发生这样的情况（通常是设置过期时间这个参数设置的不是数字类型，虽然这种情况不太可能发生），但仍然比客户端多条命令执行来的更加简短\nlock.lua")])]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- Set a lock")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--  如果获取锁成功，则返回 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" key     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" ttl     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tonumber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" lockSet "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'setnx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" lockSet "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'PEXPIRE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ttl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 如果value相同，则认为是同一个线程的请求，则认为重入锁")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    lockSet "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'PEXPIRE'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ttl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" lockSet\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v("unlock.lua")]),s._v(" "),a("div",{staticClass:"language-lua line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-lua"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- unlock key")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" key     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KEYS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ARGV"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("local")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'get'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" content "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'del'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("测试加锁和解锁")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("redis-cli  --eval lock.lua lo3 , 2 60000\nredis-cli  --eval unlock.lua lo3 , 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);