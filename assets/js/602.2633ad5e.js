(window.webpackJsonp=window.webpackJsonp||[]).push([[602],{875:function(t,a,s){"use strict";s.r(a);var i=s(14),r=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"road-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#road-map"}},[t._v("#")]),t._v(" Road Map")]),t._v(" "),a("iframe",{attrs:{src:t.$withBase("/dynamic-linear.html"),width:"100%",height:"800",frameborder:"0",scrolling:"No",leftmargin:"0",topmargin:"0"}}),t._v(" "),a("p",[t._v("刷题路线：")]),t._v(" "),a("ul",[a("li",[t._v("最经典单串：300")]),t._v(" "),a("li",[t._v("最经典双串：1143")]),t._v(" "),a("li",[t._v("经典问题：")])]),t._v(" "),a("ol",{attrs:{start:"120"}},[a("li",[t._v("三角形最小路径和")]),t._v(" "),a("li",[t._v("最大子序和")]),t._v(" "),a("li",[t._v("乘积最大子数组")]),t._v(" "),a("li",[t._v("鸡蛋掉落（DP+二分）")]),t._v(" "),a("li",[t._v("俄罗斯套娃信封问题")])]),t._v(" "),a("ul",[a("li",[t._v("打家劫舍系列: (打家劫舍 3 是树形 DP)")])]),t._v(" "),a("ol",{attrs:{start:"198"}},[a("li",[t._v("打家劫舍")]),t._v(" "),a("li",[t._v("打家劫舍 II")])]),t._v(" "),a("ul",[a("li",[t._v("股票系列:")])]),t._v(" "),a("ol",{attrs:{start:"121"}},[a("li",[t._v("买卖股票的最佳时机")]),t._v(" "),a("li",[t._v("买卖股票的最佳时机 II")]),t._v(" "),a("li",[t._v("买卖股票的最佳时机 III")]),t._v(" "),a("li",[t._v("买卖股票的最佳时机 IV")]),t._v(" "),a("li",[t._v("最佳买卖股票时机含冷冻期")]),t._v(" "),a("li",[t._v("买卖股票的最佳时机含手续费")])]),t._v(" "),a("ul",[a("li",[t._v("字符串匹配系列")])]),t._v(" "),a("ol",{attrs:{start:"72"}},[a("li",[t._v("编辑距离")]),t._v(" "),a("li",[t._v("通配符匹配")]),t._v(" "),a("li",[t._v("正则表达式匹配")])]),t._v(" "),a("h1",{attrs:{id:"线性-dp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性-dp"}},[t._v("#")]),t._v(" 线性 dp")]),t._v(" "),a("p",[t._v("线性 dp 的模型是线性的")]),t._v(" "),a("h1",{attrs:{id:"问题分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题分类"}},[t._v("#")]),t._v(" 问题分类")]),t._v(" "),a("p",[t._v("线性 dp 可以按分析方式分为几类：")]),t._v(" "),a("ul",[a("li",[t._v("坐标型")]),t._v(" "),a("li",[t._v("序列型")]),t._v(" "),a("li",[t._v("划分型")])]),t._v(" "),a("h1",{attrs:{id:"坐标型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#坐标型"}},[t._v("#")]),t._v(" 坐标型")]),t._v(" "),a("p",[t._v("坐标型 dp 一般可以分为一维坐标和二维坐标")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("坐标记录状态")])]),t._v(" "),a("li",[a("p",[t._v("可以用滚动数组进行空间优化")])])]),t._v(" "),a("h2",{attrs:{id:"一维坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一维坐标"}},[t._v("#")]),t._v(" 一维坐标")]),t._v(" "),a("p",[t._v("硬币组合: 足够的 2，5，7 面值的硬币，问最少用多少个硬币能组合出面值 27（有多少种方式凑出面值 27）")]),t._v(" "),a("p",[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("f")]),a("mo",[t._v("(")]),a("mi",[t._v("i")]),a("mo",[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("f(i)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[t._v("f")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mclose"},[t._v(")")])])])]),t._v(" 表示凑出 i 元所有的最少硬币数（凑出 i 元的方案数）")]),t._v(" "),a("h3",{attrs:{id:"_518-零钱兑换-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_518-零钱兑换-ii"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/coin-change-2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("518. 零钱兑换 II"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"剑指-offer-46-把数字翻译成字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-46-把数字翻译成字符串"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("剑指 Offer 46. 把数字翻译成字符串"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"二维坐标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维坐标"}},[t._v("#")]),t._v(" 二维坐标")]),t._v(" "),a("p",[t._v("不同路径：在一个二维棋盘中，机器人从左上角走到右下角，有多少种走法")]),t._v(" "),a("h3",{attrs:{id:"_62-不同路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_62-不同路径"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/unique-paths/",target:"_blank",rel:"noopener noreferrer"}},[t._v("62. 不同路径"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_63-不同路径-ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_63-不同路径-ii"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/unique-paths-ii/",target:"_blank",rel:"noopener noreferrer"}},[t._v("63. 不同路径 II"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_64-最小路径和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_64-最小路径和"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/minimum-path-sum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("64. 最小路径和"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_120-三角形最小路径和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_120-三角形最小路径和"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://leetcode.cn/problems/triangle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("120. 三角形最小路径和"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"炸弹袭击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#炸弹袭击"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.lintcode.com/problem/553/",target:"_blank",rel:"noopener noreferrer"}},[t._v("炸弹袭击"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("二维矩阵中的格子为空，敌人，墙，炸弹可以放在任意空地上，炸弹会杀死同一行和同一列没有墙阻隔的敌人；问一个炸弹杀死的最大敌人数")]),t._v(" "),a("p",[t._v("算法思路：")]),t._v(" "),a("ul",[a("li",[t._v("记录"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("d")]),a("mi",[t._v("p")]),a("mo",[t._v("[")]),a("mi",[t._v("i")]),a("mo",[t._v("]")]),a("mo",[t._v("[")]),a("mi",[t._v("j")]),a("mo",[t._v("]")]),a("mo",[t._v("[")]),a("mn",[t._v("0")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mn",[t._v("1")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mn",[t._v("2")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mn",[t._v("3")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("dp[i][j][0,1,2,3]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("d")]),a("span",{staticClass:"mord mathit"},[t._v("p")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mclose"},[t._v("]")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),a("span",{staticClass:"mclose"},[t._v("]")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathrm"},[t._v("2")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathrm"},[t._v("3")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("分别为向四个方向能炸死的敌人数目")]),t._v(" "),a("li",[t._v("从四个方向，做差分，记录每个位置在此方向上能够炸死的敌人数目")]),t._v(" "),a("li",[t._v("四个方向求和，迭代得最大值")])]),t._v(" "),a("h1",{attrs:{id:"序列型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#序列型"}},[t._v("#")]),t._v(" 序列型")]),t._v(" "),a("p",[t._v("序列型一般分为单序列、双序列")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般需要自定义空序列表示 f[0]")])]),t._v(" "),a("li",[a("p",[t._v("有时候会有 K 维序列，表示 K 种状态")])])]),t._v(" "),a("h1",{attrs:{id:"划分型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#划分型"}},[t._v("#")]),t._v(" 划分型")]),t._v(" "),a("p",[t._v("划分型是将序列分成若干段，每一段具有最大/最小的性质）")]),t._v(" "),a("p",[t._v("给定长度为 N 的序列，要求划分为若干段")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("段数不限，或指定 K 段")])]),t._v(" "),a("li",[a("p",[t._v("每一段满足一定的性质（最小代价，能不能等）\n做法：")])]),t._v(" "),a("li",[a("p",[t._v("类似于序列型动态规划，但是通常要加上段数信息")])]),t._v(" "),a("li",[a("p",[t._v("一般用"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("f")]),a("mo",[t._v("[")]),a("mi",[t._v("i")]),a("mo",[t._v("+")]),a("mn",[t._v("1")]),a("mo",[t._v("]")]),a("mo",[t._v("[")]),a("mi",[t._v("k")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("f[i + 1][k]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[t._v("f")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mbin"},[t._v("+")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mclose"},[t._v("]")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("来记录前 i 个元素（元素"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mn",[t._v("0")]),a("mo",[t._v("=")]),a("mo",[t._v(">")]),a("mi",[t._v("i")]),a("mo",[t._v("−")]),a("mn",[t._v("1")]),a("mo",{attrs:{separator:"true"}},[t._v(",")]),a("mi",[t._v("f")]),a("mo",[t._v("[")]),a("mn",[t._v("0")]),a("mo",[t._v("]")]),a("mo",[t._v("[")]),a("mi",[t._v("k")]),a("mo",[t._v("]")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("0=>i-1,f[0][k]")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mrel"},[t._v("=")]),a("span",{staticClass:"mrel"},[t._v(">")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mbin"},[t._v("−")]),a("span",{staticClass:"mord mathrm"},[t._v("1")]),a("span",{staticClass:"mpunct"},[t._v(",")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[t._v("f")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathrm"},[t._v("0")]),a("span",{staticClass:"mclose"},[t._v("]")]),a("span",{staticClass:"mopen"},[t._v("[")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),a("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("表示空序列）分成 k 段的性质，如最小代价")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);