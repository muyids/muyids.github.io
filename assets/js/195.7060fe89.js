(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{468:function(r,a,t){"use strict";t.r(a);var e=t(14),s=Object(e.a)({},(function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h4",{attrs:{id:"官网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官网"}},[r._v("#")]),r._v(" 官网")]),r._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://kafka.apache.org/documentation.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("apache 官方[en]"),a("OutboundLink")],1)]),r._v(" "),a("li",[a("a",{attrs:{href:"http://kafka.apachecn.org/documentation.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("apache 官方[中文]"),a("OutboundLink")],1)])]),r._v(" "),a("h4",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[r._v("#")]),r._v(" 定义")]),r._v(" "),a("p",[r._v("Kafka 是一个"),a("strong",[r._v("分布式")]),r._v("的基于"),a("strong",[r._v("发布/订阅模式")]),r._v("的"),a("strong",[r._v("消息队列")])]),r._v(" "),a("h4",{attrs:{id:"消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息队列"}},[r._v("#")]),r._v(" 消息队列")]),r._v(" "),a("p",[a("img",{attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/mq-schematic-diagram.png",alt:"消息队列原理图"}})]),r._v(" "),a("h4",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[r._v("#")]),r._v(" 作用")]),r._v(" "),a("p",[r._v("异步、削峰、解耦")]),r._v(" "),a("h4",{attrs:{id:"消费模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费模式"}},[r._v("#")]),r._v(" 消费模式")]),r._v(" "),a("ul",[a("li",[r._v("点对点(一对一)")]),r._v(" "),a("li",[r._v("发布订阅（一对多）")])]),r._v(" "),a("h4",{attrs:{id:"消费方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费方式"}},[r._v("#")]),r._v(" "),a("strong",[r._v("消费方式")])]),r._v(" "),a("ul",[a("li",[r._v("推")]),r._v(" "),a("li",[r._v("拉")])]),r._v(" "),a("h4",{attrs:{id:"详细架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#详细架构图"}},[r._v("#")]),r._v(" 详细架构图")]),r._v(" "),a("h4",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[r._v("#")]),r._v(" 概念")]),r._v(" "),a("ul",[a("li",[r._v("Producer")]),r._v(" "),a("li",[r._v("Consumer")]),r._v(" "),a("li",[r._v("Consumer Group (CG)")]),r._v(" "),a("li",[r._v("Broker")]),r._v(" "),a("li",[r._v("Topic")]),r._v(" "),a("li",[r._v("Partition")]),r._v(" "),a("li",[r._v("Replica")]),r._v(" "),a("li",[r._v("Leader")]),r._v(" "),a("li",[r._v("Follower")]),r._v(" "),a("li",[r._v("Offset")])]),r._v(" "),a("h4",{attrs:{id:"producer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#producer"}},[r._v("#")]),r._v(" Producer")]),r._v(" "),a("p",[r._v("消息生产者，就是向 kafka broker 发消息的客户端;")]),r._v(" "),a("h4",{attrs:{id:"consumer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[r._v("#")]),r._v(" Consumer")]),r._v(" "),a("p",[r._v("消息消费者，向 kafka broker 取消息的客户端;")]),r._v(" "),a("h4",{attrs:{id:"topic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topic"}},[r._v("#")]),r._v(" Topic")]),r._v(" "),a("p",[r._v("可以理解为一个队列;")]),r._v(" "),a("h4",{attrs:{id:"consumer-group-cg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer-group-cg"}},[r._v("#")]),r._v(" Consumer Group(CG)")]),r._v(" "),a("p",[r._v("kafka 用来实现一个 topic 消息的广播(发给所有的 consumer) 和单播(发给任意一个 consumer)的手段。")]),r._v(" "),a("p",[r._v("一个 topic 可以有多个 CG。")]),r._v(" "),a("p",[r._v("topic 的消息会复制 (不是真的复制，是概念上的)到所有的 CG，但每个 partion 只会把消息发给该 CG 中的一个 consumer。")]),r._v(" "),a("p",[r._v("如果需要实现广播，只要每个 consumer 有一个独立的 CG 就可以了。要实现 单播只要所有的 consumer 在同一个 CG。")]),r._v(" "),a("p",[r._v("用 CG 还可以将 consumer 进行自由的分组而不需要多次发送消息到不同的 topic;")]),r._v(" "),a("h4",{attrs:{id:"broker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broker"}},[r._v("#")]),r._v(" Broker")]),r._v(" "),a("p",[r._v("一台 kafka 服务器就是一个 broker。")]),r._v(" "),a("p",[r._v("一个集群由多个 broker 组成。")]),r._v(" "),a("p",[r._v("一个 broker 可以容纳多个 topic。")])])}),[],!1,null,null,null);a.default=s.exports}}]);