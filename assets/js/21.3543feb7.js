(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{292:function(v,_,l){"use strict";l.r(_);var n=l(14),i=Object(n.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("正式开始讲 Linux IO 模型前，我们先明确下同步 IO 和异步 IO，阻塞 IO 和非阻塞 IO 分别是什么，到底有什么区别？")]),v._v(" "),_("p",[v._v("不同的人在不同的上下文下给出的答案是不同的。所以先限定一下本文的上下文。")]),v._v(" "),_("h2",{attrs:{id:"解释同步和异步-阻塞和非阻塞-io"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解释同步和异步-阻塞和非阻塞-io"}},[v._v("#")]),v._v(" 解释同步和异步，阻塞和非阻塞 IO")]),v._v(" "),_("p",[v._v("老张爱喝茶，废话不说，煮开水。出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。")]),v._v(" "),_("ol",[_("li",[v._v("老张把水壶放到火上，在水壶旁等水开。（同步阻塞）\n老张觉得自己有点傻")]),v._v(" "),_("li",[v._v("老张把水壶放到火上，去客厅看电视，时不时去厨房看看水开没有。（同步非阻塞）\n老张还是觉得自己有点傻，于是变高端了，买了把会响笛的那种水壶。水开之后，能大声发出嘀~~~~的噪音。")]),v._v(" "),_("li",[v._v("老张把响水壶放到火上，立等水开。（异步阻塞）\n老张觉得这样傻等意义不大")]),v._v(" "),_("li",[v._v("老张把响水壶放到火上，去客厅看电视，水壶响之前不再去看它了，响了再去拿壶。（异步非阻塞）\n老张觉得自己聪明了。\n所谓同步异步，只是对于水壶而言; 普通水壶，同步；响水壶，异步。\n虽然都能干活，但响水壶可以在自己完工之后，提示老张水开了。这是普通水壶所不能及的。\n同步只能让调用者去轮询自己（情况 2 中），造成老张效率的低下。\n所谓阻塞非阻塞，仅仅对于老张而言。立等的老张，阻塞；看电视的老张，非阻塞。\n情况 1 和情况 3 中老张就是阻塞的，媳妇喊他都不知道。\n虽然 3 中响水壶是异步的，可对于立等的老张没有太大的意义。\n所以一般异步是配合非阻塞使用的，这样才能发挥异步的效用。")])]),v._v(" "),_("h2",{attrs:{id:"linux-的网络-io-模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#linux-的网络-io-模型"}},[v._v("#")]),v._v(" linux 的网络 IO 模型")]),v._v(" "),_("p",[v._v("IO 的本质是 socket 的读取，数据先拷贝到内核的缓冲区中，然后拷贝到应用程序的地址空间（进程）")]),v._v(" "),_("p",[v._v("对于一次 IO 访问（以 read 举例），数据会先被拷贝到操作系统内核的缓冲区中，然后才会从操作系统内核的缓冲区拷贝到应用程序的地址空间。\n所以说，当一个 read 操作发生时，它会经历两个阶段：")]),v._v(" "),_("blockquote",[_("p",[v._v("第一阶段：等待数据准备 (Waiting for the data to be ready)。\n第二阶段：将数据从内核拷贝到进程中 (Copying the data from the kernel to the process)。\n5 种 IO 模型")])]),v._v(" "),_("ul",[_("li",[v._v("BIO（blocking IO）：同步阻塞 I/O")]),v._v(" "),_("li",[v._v("NIO（nonblocking IO）：同步非阻塞 I/O")]),v._v(" "),_("li",[v._v("多路复用 IO（IO multiplexing）")]),v._v(" "),_("li",[v._v("信号驱动 IO（signal driven IO）")]),v._v(" "),_("li",[v._v("异步 IO（asynchronous IO）")])]),v._v(" "),_("p",[v._v("几个同学用桶去水龙头处接水")]),v._v(" "),_("ol",[_("li",[v._v("A 同学来到水龙头旁，等待水来，水来了，等待水接满，整个过程都是阻塞的；-- BIO")]),v._v(" "),_("li",[v._v("B 同学每隔一段时间就来水龙头旁观察水有没有来，如果水没来，就回去写会代码，待会再来，水来了，就跑去接水，直到水接满； -- NIO")]),v._v(" "),_("li",[v._v("C 同学来装水，发现一排水龙头，舍管阿姨告诉他现在还没水，等有水了告诉他。等了一会，阿姨告诉 C 同学来水了，但是不知道哪个水龙头有水，自己看吧；于是 C 同学一个一个水龙头打开，找到有水的水龙头，开始接水 -- 多路复用 IO (epoll 也属于 IO 复用模型)")]),v._v(" "),_("li",[v._v("D 同学让舍管阿姨等有水的时候通知他（注册信号函数）。过了一会，D 同学得知有水了，就跑去接水，直到水接满； -- 信号驱动 IO")]),v._v(" "),_("li",[v._v("E 同学让舍管阿姨等桶装满谁后通知他，整个过程 E 同学都可以做别的事情。-- 异步 IO")])]),v._v(" "),_("p",[v._v("有没有来水是数据准备阶段；接水过程是数据从内核空间复制到用户进程缓冲区阶段；")]),v._v(" "),_("p",[v._v("总结")]),v._v(" "),_("p",[v._v("IO 分两阶段：")]),v._v(" "),_("ol",[_("li",[v._v("数据准备阶段")]),v._v(" "),_("li",[v._v("将数据从内核拷贝到进程中（内核空间复制回用户进程缓冲区阶段）\n一般来讲：阻塞 IO 模型、非阻塞 IO 模型、IO 复用模型(select/poll/epoll)、信号驱动 IO 都属于同步 IO，因为阶段 2 是阻塞的(尽管时间很短)。只有异步 IO 模型是符合异步 IO 操作含义的，不管在阶段 1 还是阶段 2 都可以干别的事。")])]),v._v(" "),_("p",[v._v("https://blog.csdn.net/baiye_xing/article/details/74331041")]),v._v(" "),_("p",[v._v("epoll 是同步还是异步 IO？答案：epoll 是同步 IO（多路复用 IO）")]),v._v(" "),_("p",[v._v("在处理 IO 时，阻塞和非阻塞都是同步 IO；\n只有使用了特殊的 API 才是异步 IO。")])])}),[],!1,null,null,null);_.default=i.exports}}]);