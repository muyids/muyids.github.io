(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{385:function(a,t,e){"use strict";e.r(t);var v=e(14),n=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"远程跟踪分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程跟踪分支"}},[a._v("#")]),a._v(" 远程跟踪分支")]),a._v(" "),t("p",[a._v("在前几节课程中有件事儿挺神奇的，Git 好像知道 "),t("code",[a._v("main")]),a._v(" 与 "),t("code",[a._v("o/main")]),a._v(" 是相关的。当然这些分支的名字是相似的，可能会让你觉得是依此将远程分支 main 和本地的 main 分支进行了关联。这种关联在以下两种情况下可以清楚地得到展示：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("pull 操作时, 提交记录会被先下载到 o/main 上，之后再合并到本地的 main 分支。隐含的合并目标由这个关联确定的。")])]),a._v(" "),t("li",[t("p",[a._v("push 操作时, 我们把工作从 "),t("code",[a._v("main")]),a._v(" 推到远程仓库中的 "),t("code",[a._v("main")]),a._v(" 分支(同时会更新远程分支 "),t("code",[a._v("o/main")]),a._v(") 。这个推送的目的地也是由这种关联确定的！")])])]),a._v(" "),t("h1",{attrs:{id:"远程跟踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程跟踪"}},[a._v("#")]),a._v(" 远程跟踪")]),a._v(" "),t("p",[a._v("直接了当地讲，"),t("code",[a._v("main")]),a._v(" 和 "),t("code",[a._v("o/main")]),a._v(" 的关联关系就是由分支的“remote tracking”属性决定的。"),t("code",[a._v("main")]),a._v(" 被设定为跟踪 "),t("code",[a._v("o/main")]),a._v(" —— 这意味着为 "),t("code",[a._v("main")]),a._v(" 分支指定了推送的目的地以及拉取后合并的目标。")]),a._v(" "),t("p",[a._v("你可能想知道 "),t("code",[a._v("main")]),a._v(" 分支上这个属性是怎么被设定的，你并没有用任何命令指定过这个属性呀！好吧, 当你克隆仓库的时候, Git 就自动帮你把这个属性设置好了。")]),a._v(" "),t("p",[a._v("当你克隆时, Git 会为远程仓库中的每个分支在本地仓库中创建一个远程分支（比如 "),t("code",[a._v("o/main")]),a._v("）。然后再创建一个跟踪远程仓库中活动分支的本地分支，默认情况下这个本地分支会被命名为 "),t("code",[a._v("main")]),a._v("。")]),a._v(" "),t("p",[a._v("克隆完成后，你会得到一个本地分支（如果没有这个本地分支的话，你的目录就是“空白”的），但是可以查看远程仓库中所有的分支（如果你好奇心很强的话）。这样做对于本地仓库和远程仓库来说，都是最佳选择。")]),a._v(" "),t("p",[a._v("这也解释了为什么会在克隆的时候会看到下面的输出：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('local branch "main" set to track remote branch "o/main"\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"我能自己指定这个属性吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#我能自己指定这个属性吗"}},[a._v("#")]),a._v(" 我能自己指定这个属性吗？")]),a._v(" "),t("p",[a._v("当然可以啦！你可以让任意分支跟踪 "),t("code",[a._v("o/main")]),a._v(", 然后该分支会像 "),t("code",[a._v("main")]),a._v(" 分支一样得到隐含的 push 目的地以及 merge 的目标。 这意味着你可以在分支 "),t("code",[a._v("totallyNotMain")]),a._v(" 上执行 "),t("code",[a._v("git push")]),a._v("，将工作推送到远程仓库的 "),t("code",[a._v("main")]),a._v(" 分支上。")]),a._v(" "),t("p",[a._v("有两种方法设置这个属性")]),a._v(" "),t("h2",{attrs:{id:"第一种方法-git-checkout-b-xxx-o-main"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一种方法-git-checkout-b-xxx-o-main"}},[a._v("#")]),a._v(" 第一种方法："),t("code",[a._v("git checkout -b xxx o/main")])]),a._v(" "),t("p",[a._v("第一种就是通过远程分支检出一个新的分支，执行:")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git checkout -b totallyNotMain o/main\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("就可以创建一个名为 "),t("code",[a._v("totallyNotMain")]),a._v(" 的分支，它跟踪远程分支 "),t("code",[a._v("o/main")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"第二种方法-git-branch-u-o-main-xxx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二种方法-git-branch-u-o-main-xxx"}},[a._v("#")]),a._v(" 第二种方法："),t("code",[a._v("git branch -u o/main xxx")])]),a._v(" "),t("p",[a._v("另一种设置远程追踪分支的方法就是使用："),t("code",[a._v("git branch -u")]),a._v(" 命令，执行：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git branch -u o/main foo\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("这样 "),t("code",[a._v("foo")]),a._v(" 就会跟踪 "),t("code",[a._v("o/main")]),a._v(" 了。如果当前就在 foo 分支上, 还可以省略 foo：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("git branch -u o/main\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);