(window.webpackJsonp=window.webpackJsonp||[]).push([[467],{741:function(s,r,t){"use strict";t.r(r);var e=t(14),a=Object(e.a)({},(function(){var s=this,r=s._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),r("p",[s._v("守护进程管理工具有很多，比如 nodejs 的进程管理工具 PM2、forever，也有 linux 的"),r("code",[s._v("daemontools")]),s._v("、"),r("code",[s._v("supervisor")]),s._v("等，本文写一下 supervisor 的基本使用")]),s._v(" "),r("h2",{attrs:{id:"安装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),r("p",[s._v("安装可以使用一下 命令:")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("sudo apt-get install supervisor\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("p",[s._v("安装成功后,supervisor 就会默认启动")]),s._v(" "),r("h3",{attrs:{id:"添加进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#添加进程"}},[s._v("#")]),s._v(" 添加进程")]),s._v(" "),r("p",[s._v("将每个进程的配置文件单独拆分,放在"),r("code",[s._v("/etc/supervisor/conf.d/")]),s._v("目录下, 以"),r("code",[s._v(".conf")]),s._v("作为扩展名,例如"),r("code",[s._v("test.conf")]),s._v("定义的一个简单的 HTTP 服务器:")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("[program:test]\ncommand=python -m SimpleHTTPServer\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("p",[s._v("重启 supervisor,让配置文件生效,然后启动 test 进程:")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("supervisorctl reload\nsupervisorctl start test\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("p",[s._v("如果要停止进程,就用 stop")]),s._v(" "),r("h3",{attrs:{id:"配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),r("p",[s._v("通过这个例子讲解")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("[program:meta.txn.recover.on.error]\ncommand=/cas/bin/meta.txn.recover.on.error ; 被监控的进程路径\nnumprocs=1                    ; 启动几个进程\ndirectory=/cas/bin            ; 执行前要不要先cd到目录去，一般不用\nautostart=true                ; 随着supervisord的启动而启动\nautorestart=true              ; 自动重启。。当然要选上了\nstartretries=10               ; 启动失败时的最多重试次数\nexitcodes=0                 ; 正常退出代码（是说退出代码是这个时就不再重启了吗？待确定）\nstopsignal=KILL               ; 用来杀死进程的信号\nstopwaitsecs=10               ; 发送SIGKILL前的等待时间\nredirect_stderr=true          ; 重定向stderr到stdout\nstdout_logfile=logfile        ; 指定日志文件\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br")])]),r("h3",{attrs:{id:"常用命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),r("ul",[r("li",[s._v("supervisorctl start programxxx，启动某个进程")]),s._v(" "),r("li",[s._v("supervisorctl restart programxxx，重启某个进程")]),s._v(" "),r("li",[s._v("supervisorctl stop groupworker: ，重启所有属于名为 groupworker 这个分组的进程(start,restart 同理)")]),s._v(" "),r("li",[s._v("supervisorctl stop all，停止全部进程，注：start、restart、stop 都不会载入最新的配置文件。")]),s._v(" "),r("li",[s._v("supervisorctl reload，载入最新的配置文件，停止原有进程并按新的配置启动、管理所有进程。")]),s._v(" "),r("li",[s._v("supervisorctl update，根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。")])])])}),[],!1,null,null,null);r.default=a.exports}}]);