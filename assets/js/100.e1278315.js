(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{373:function(t,e,s){"use strict";s.r(e);var a=s(14),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"在提交树上移动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在提交树上移动"}},[t._v("#")]),t._v(" 在提交树上移动")]),t._v(" "),e("p",[t._v("在接触 Git 更高级功能之前，我们有必要先学习在你项目的提交树上前后移动的几种方法。")]),t._v(" "),e("p",[t._v("一旦熟悉了如何在 Git 提交树上移动，你驾驭其它命令的能力也将水涨船高！")]),t._v(" "),e("h1",{attrs:{id:"head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[t._v("#")]),t._v(" HEAD")]),t._v(" "),e("p",[t._v("我们首先看一下 “HEAD”。 HEAD 是一个对当前检出记录的符号引用 —— 也就是指向你正在其基础上进行工作的提交记录。")]),t._v(" "),e("p",[t._v("HEAD 总是指向当前分支上最近一次提交记录。大多数修改提交树的 Git 命令都是从改变 HEAD 的指向开始的。")]),t._v(" "),e("p",[t._v("HEAD 通常情况下是指向分支名的（如 bugFix）。在你提交时，改变了 bugFix 的状态，这一变化通过 HEAD 变得可见。")]),t._v(" "),e("h1",{attrs:{id:"相对引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相对引用"}},[t._v("#")]),t._v(" 相对引用")]),t._v(" "),e("p",[t._v("通过指定提交记录哈希值的方式在 Git 中移动不太方便。在实际应用时，并没有像本程序中这么漂亮的可视化提交树供你参考，所以你就不得不用 "),e("code",[t._v("git log")]),t._v(" 来查查看提交记录的哈希值。")]),t._v(" "),e("p",[t._v("并且哈希值在真实的 Git 世界中也会更长（译者注：基于 SHA-1，共 40 位）。例如前一关的介绍中的提交记录的哈希值可能是 "),e("code",[t._v("fed2da64c0efc5293610bdd892f82a58e8cbc5d8")]),t._v("。舌头都快打结了吧...")]),t._v(" "),e("p",[t._v("比较令人欣慰的是，Git 对哈希的处理很智能。你只需要提供能够唯一标识提交记录的前几个字符即可。因此我可以仅输入"),e("code",[t._v("fed2")]),t._v(" 而不是上面的一长串字符。")]),t._v(" "),e("p",[t._v("使用相对引用的话，你就可以从一个易于记忆的地方（比如 "),e("code",[t._v("bugFix")]),t._v(" 分支或 "),e("code",[t._v("HEAD")]),t._v("）开始计算。")]),t._v(" "),e("p",[t._v("相对引用非常给力，这里我介绍两个简单的用法：")]),t._v(" "),e("ul",[e("li",[t._v("使用 "),e("code",[t._v("^")]),t._v(" 向上移动 1 个提交记录")]),t._v(" "),e("li",[t._v("使用 "),e("code",[t._v("~<num>")]),t._v(" 向上移动多个提交记录，如 "),e("code",[t._v("~3")])])]),t._v(" "),e("h2",{attrs:{id:"操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作符"}},[t._v("#")]),t._v(" “^”操作符")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git checkout bugFix^^\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"操作符-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作符-2"}},[t._v("#")]),t._v(" “~”操作符")]),t._v(" "),e("p",[t._v("如果你想在提交树中向上移动很多步的话，敲那么多 "),e("code",[t._v("^")]),t._v(" 貌似也挺烦人的，Git 当然也考虑到了这一点，于是又引入了操作符 "),e("code",[t._v("~")]),t._v("。")]),t._v(" "),e("p",[t._v("该操作符后面可以跟一个数字（可选，不跟数字时与 "),e("code",[t._v("^")]),t._v(" 相同，向上移动一次），指定向上移动多少次。咱们还是通过实际操作看一下吧")]),t._v(" "),e("h1",{attrs:{id:"强制修改分支位置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制修改分支位置"}},[t._v("#")]),t._v(" 强制修改分支位置")]),t._v(" "),e("p",[t._v("你现在是相对引用的专家了，现在用它来做点实际事情。")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230209141206994.png",alt:"image-20230209141206994"}}),t._v(" "),e("p",[t._v("我使用相对引用最多的就是移动分支。可以直接使用 "),e("code",[t._v("-f")]),t._v(" 选项让分支指向另一个提交。例如:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git branch -f main HEAD~3\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("上面的命令会将 main 分支强制指向 HEAD 的第 3 级父提交。")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230209141250753.png",alt:"image-20230209141250753"}}),t._v(" "),e("p",[t._v("这就对了! 相对引用为我们提供了一种简洁的引用提交记录 "),e("code",[t._v("C1")]),t._v(" 的方式， 而 "),e("code",[t._v("-f")]),t._v(" 则容许我们将分支强制移动到那个位置。")]),t._v(" "),e("p",[t._v("既然你已经看过相对引用与强制移动分支的演示了，那么赶快使用这些技巧来挑战这一关吧！")]),t._v(" "),e("p",[t._v("要完成此关，移动 "),e("code",[t._v("HEAD")]),t._v("，"),e("code",[t._v("main")]),t._v(" 和 "),e("code",[t._v("bugFix")]),t._v(" 到目标所示的位置。")]),t._v(" "),e("h1",{attrs:{id:"撤销变更"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#撤销变更"}},[t._v("#")]),t._v(" 撤销变更")]),t._v(" "),e("p",[t._v("在 Git 里撤销变更的方法很多。和提交一样，撤销变更由底层部分（暂存区的独立文件或者片段）和上层部分（变更到底是通过哪种方式被撤销的）组成。我们这个应用主要关注的是后者。")]),t._v(" "),e("p",[t._v("主要有两种方法用来撤销变更 —— 一是 "),e("code",[t._v("git reset")]),t._v("，还有就是 "),e("code",[t._v("git revert")]),t._v("。接下来咱们逐个进行讲解。")]),t._v(" "),e("h2",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" Git Reset")]),t._v(" "),e("p",[e("code",[t._v("git reset")]),t._v(" 通过把分支记录回退几个提交记录来实现撤销改动。你可以将这想象成“改写历史”。"),e("code",[t._v("git reset")]),t._v(" 向上移动分支，原来指向的提交记录就跟从来没有提交过一样。")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230209155540473.png",alt:"image-20230209155540473"}}),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset HEAD~1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230209155607211.png",alt:"image-20230209155607211"}}),t._v(" "),e("p",[t._v("Git 把 main 分支移回到 "),e("code",[t._v("C1")]),t._v("；现在我们的本地代码库根本就不知道有 "),e("code",[t._v("C2")]),t._v(" 这个提交了。")]),t._v(" "),e("h2",{attrs:{id:"git-revert"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-revert"}},[t._v("#")]),t._v(" Git Revert")]),t._v(" "),e("p",[t._v("虽然在你的本地分支中使用 "),e("code",[t._v("git reset")]),t._v(" 很方便，但是这种“改写历史”的方法对大家一起使用的远程分支是无效的哦！")]),t._v(" "),e("p",[t._v("为了撤销更改并"),e("strong",[t._v("分享")]),t._v("给别人，我们需要使用 "),e("code",[t._v("git revert")]),t._v("。")]),t._v(" "),e("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://muyids.oss-cn-beijing.aliyuncs.com/img/image-20230209155703680.png",alt:"image-20230209155703680"}}),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git revert HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);e.default=v.exports}}]);