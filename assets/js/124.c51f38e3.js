(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{398:function(t,v,a){"use strict";a.r(v);var _=a(14),i=Object(_.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"v2-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v2-0"}},[t._v("#")]),t._v(" V2.0")]),t._v(" "),v("h1",{attrs:{id:"一、培训课题-git-工具家族在高效团队协作中的实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、培训课题-git-工具家族在高效团队协作中的实践"}},[t._v("#")]),t._v(" 一、培训课题：git 工具家族在高效团队协作中的实践")]),t._v(" "),v("h1",{attrs:{id:"二、培训目标-理解-git-工作原理并掌握其工程实践应用-使用-github-进行开源项目合作-通过-gitlab-完成简单的-devops-流程。"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、培训目标-理解-git-工作原理并掌握其工程实践应用-使用-github-进行开源项目合作-通过-gitlab-完成简单的-devops-流程。"}},[t._v("#")]),t._v(" 二、培训目标：理解 Git 工作原理并掌握其工程实践应用，使用 GitHub 进行开源项目合作，通过 GitLab 完成简单的 DevOps 流程。")]),t._v(" "),v("h1",{attrs:{id:"三、计划培训时长-两次-一次-1-2h-共-3h"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、计划培训时长-两次-一次-1-2h-共-3h"}},[t._v("#")]),t._v(" 三、计划培训时长：两次，一次 1-2h，共 3h")]),t._v(" "),v("h1",{attrs:{id:"四、培训大纲"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、培训大纲"}},[t._v("#")]),t._v(" 四、培训大纲：")]),t._v(" "),v("h2",{attrs:{id:"第一次培训主题-git-版本控制工程实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一次培训主题-git-版本控制工程实践"}},[t._v("#")]),t._v(" 第一次培训主题：git 版本控制工程实践")]),t._v(" "),v("h3",{attrs:{id:"第一章-概念篇-git-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一章-概念篇-git-介绍"}},[t._v("#")]),t._v(" 第一章：概念篇 - git 介绍")]),t._v(" "),v("ul",[v("li",[t._v("wht：什么是版本控制，git 的背景简介")]),t._v(" "),v("li",[t._v("why：与其他版本控制软件的比较，为什么是 git")]),t._v(" "),v("li",[t._v("how：git 的工作原理简介，为何优秀")])]),t._v(" "),v("h3",{attrs:{id:"第二章-实践篇之-git-常用操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二章-实践篇之-git-常用操作"}},[t._v("#")]),t._v(" 第二章：实践篇之 git 常用操作")]),t._v(" "),v("ul",[v("li",[t._v("2.1 基本操作：讲解仓库，代码提交，代码回滚（reset、revert），暂存、提交树的灵活运用")]),t._v(" "),v("li",[t._v("2.2 强大的分支：讲解分支合并（merge、rebase 区别），分支管理删除，多分支")]),t._v(" "),v("li",[t._v("2.3 团队合作之远程仓库：讲解何为远程仓库、远程分支的追踪、代码提交、偏离主线分支后的修正")])]),t._v(" "),v("h3",{attrs:{id:"第三章-现实篇之工程实践中的代码管理痛点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三章-现实篇之工程实践中的代码管理痛点"}},[t._v("#")]),t._v(" 第三章，现实篇之工程实践中的代码管理痛点")]),t._v(" "),v("ul",[v("li",[t._v("3.1 分支管理规范")]),t._v(" "),v("li",[t._v("3.2 hook 机制代码提交规范")]),t._v(" "),v("li",[t._v("3.3 团队协作的最佳提交模式探索")]),t._v(" "),v("li",[t._v("3.4 面对版本上线的多个分支如何")]),t._v(" "),v("li",[t._v("3.5 几个月前的代码线上出现 bug 如何修复")]),t._v(" "),v("li",[t._v("3.6 这是哪路神仙的代码？")]),t._v(" "),v("li",[t._v("3.7 项目经理之瞅瞅谁在偷懒")]),t._v(" "),v("li",[t._v("。。。")])]),t._v(" "),v("h2",{attrs:{id:"第二次培训主题-探索代码托管平台-github-和-gitlab"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二次培训主题-探索代码托管平台-github-和-gitlab"}},[t._v("#")]),t._v(" 第二次培训主题：探索代码托管平台 github 和 gitlab")]),t._v(" "),v("h3",{attrs:{id:"第一章-github-来自开源社区的强大力量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一章-github-来自开源社区的强大力量"}},[t._v("#")]),t._v(" 第一章：Github - 来自开源社区的强大力量")]),t._v(" "),v("p",[t._v("目标：使用 GitHub 进行开源项目协作")]),t._v(" "),v("ul",[v("li",[t._v("github 的核心功能")]),t._v(" "),v("li",[t._v("如何找到感兴趣的开源项目")]),t._v(" "),v("li",[t._v("怎样利用 github 方便地搭建个人 blog")]),t._v(" "),v("li",[t._v("开源项目如何保证代码质量")])]),t._v(" "),v("h3",{attrs:{id:"第二章-gitlab-团队高效协作竞如此简单"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二章-gitlab-团队高效协作竞如此简单"}},[t._v("#")]),t._v(" 第二章：Gitlab - 团队高效协作竞如此简单")]),t._v(" "),v("p",[t._v("目标：基于 gitlab 完成简单 devOps 流程")]),t._v(" "),v("ul",[v("li",[t._v("为何国内企业这么喜欢 GitLab")]),t._v(" "),v("li",[t._v("Gitlab 有哪些核心功能")]),t._v(" "),v("li",[t._v("如何在 gitlab 上做项目管理")]),t._v(" "),v("li",[t._v("如何在 gitlab 上做 Code Review")]),t._v(" "),v("li",[t._v("如何保证项目集成的质量")])]),t._v(" "),v("h2",{attrs:{id:"一、"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、"}},[t._v("#")]),t._v(" 一、")]),t._v(" "),v("p",[t._v("大家在平时开发时，都是在 master 分支（或者其他用于上线的分支）上直接开发，导致 master 分支上有很多没有上线的代码。如果这时线上发现一个紧急的 bug，开发人员往往找不到一个干净的分支开发，使用 master 分支修改 bug 会导致未经测试的代码被带上线；使用其他分支开发，又可能会漏掉一些已经上线的功能。")]),t._v(" "),v("h2",{attrs:{id:"二、多个功能同时开发-一个功能不能上线-所有功能都上不了"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、多个功能同时开发-一个功能不能上线-所有功能都上不了"}},[t._v("#")]),t._v(" 二、多个功能同时开发，一个功能不能上线，所有功能都上不了")]),t._v(" "),v("p",[t._v("大家在平时开发时，经常把同时开发的多个功能的代码写在一个分支里。若这些功能都能正常测试上线，那还没有什么问题；若有一个功能因为某种原因不能上线，其他功能还要继续上线的时候，因为代码都写在一起，往往很难将不上线的功能剥离。")]),t._v(" "),v("h2",{attrs:{id:"三、上线时-不小心带上了不该上线的代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、上线时-不小心带上了不该上线的代码"}},[t._v("#")]),t._v(" 三、上线时，不小心带上了不该上线的代码")]),t._v(" "),v("h1",{attrs:{id:"v1-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v1-0"}},[t._v("#")]),t._v(" V1.0")]),t._v(" "),v("p",[t._v("一、培训课题： Git、GitHub\n二、培训目标：了解 Git 基本使用，深入理解 Git 工作原理，用 GitHub 进行团队项目代码管理，通过 GitLab 完成简单的 DevOps 流程。\n三、培训大纲：")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("背景介绍和安装配置\n1.1. 关于版本控制\n1.2. Git 简史\n(1).安装和基本配置")])]),t._v(" "),v("li",[v("p",[t._v("Git 基础操作")]),t._v(" "),v("p",[t._v("(1). 获取 Git 仓库")]),t._v(" "),v("p",[t._v("(2). 提交更新和查看提交历史")]),t._v(" "),v("p",[t._v("(1). 撤销提交")]),t._v(" "),v("p",[t._v("(1). 远程仓库使用")]),t._v(" "),v("p",[t._v("(1). 标签和别名")])]),t._v(" "),v("li",[v("p",[t._v("分支")]),t._v(" "),v("p",[t._v("(1). 分支简介")]),t._v(" "),v("p",[t._v("(1). 分支的管理：新建、删除、合并")]),t._v(" "),v("p",[t._v("(1). 分支开发工作流")]),t._v(" "),v("p",[t._v("(1). 远程分支")])])])])}),[],!1,null,null,null);v.default=i.exports}}]);