(window.webpackJsonp=window.webpackJsonp||[]).push([[639],{913:function(t,e,r){"use strict";r.r(e);var a=r(14),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"背包问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背包问题"}},[t._v("#")]),t._v(" 背包问题")]),t._v(" "),e("h2",{attrs:{id:"_01-背包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_01-背包"}},[t._v("#")]),t._v(" 01 背包")]),t._v(" "),e("h3",{attrs:{id:"_416-等和子集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_416-等和子集"}},[t._v("#")]),t._v(" 416.等和子集")]),t._v(" "),e("p",[t._v("01 背包")]),t._v(" "),e("h3",{attrs:{id:"_300-最长递增序列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_300-最长递增序列"}},[t._v("#")]),t._v(" 300.最长递增序列")]),t._v(" "),e("p",[t._v("01 背包")]),t._v(" "),e("h3",{attrs:{id:"_368-最大整除子集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_368-最大整除子集"}},[t._v("#")]),t._v(" "),e("strong",[t._v("368.最大整除子集")])]),t._v(" "),e("p",[t._v("01 背包求解决方案")]),t._v(" "),e("h2",{attrs:{id:"完全背包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#完全背包"}},[t._v("#")]),t._v(" 完全背包")]),t._v(" "),e("h3",{attrs:{id:"_322-零钱兑换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_322-零钱兑换"}},[t._v("#")]),t._v(" 322.零钱兑换")]),t._v(" "),e("p",[t._v("完全背包")]),t._v(" "),e("h3",{attrs:{id:"_518-coin-change-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_518-coin-change-2"}},[t._v("#")]),t._v(" 518.Coin Change 2")]),t._v(" "),e("p",[t._v("完全背包求方案数")]),t._v(" "),e("h2",{attrs:{id:"多重背包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多重背包"}},[t._v("#")]),t._v(" 多重背包")]),t._v(" "),e("h3",{attrs:{id:"_474-一和零"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_474-一和零"}},[t._v("#")]),t._v(" 474.一和零")]),t._v(" "),e("p",[t._v("多维背包")]),t._v(" "),e("h1",{attrs:{id:"最长序列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最长序列"}},[t._v("#")]),t._v(" 最长序列")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/300.longest-increasing-subsequence.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 300. Longest Increasing Subsequence (medium)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1101-1200/1143.longest-common-subsequence.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 1143. Longest Common Subsequence (medium)"),e("OutboundLink")],1)])])]),t._v(" "),e("h1",{attrs:{id:"图形问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图形问题"}},[t._v("#")]),t._v(" 图形问题")]),t._v(" "),e("p",[t._v("根据棋盘中图形的性质，通过相邻坐标的状态，进行推导")]),t._v(" "),e("h2",{attrs:{id:"矩形统计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#矩形统计"}},[t._v("#")]),t._v(" 矩形统计")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/221.maximal-square.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 221. Maximal Square (medium)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1201-1300/1277.count-square-submatrices-with-all-ones.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 1277. Count Square Submatrices with All Ones (medium)"),e("OutboundLink")],1)])])]),t._v(" "),e("h1",{attrs:{id:"线性-dp-序列型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#线性-dp-序列型"}},[t._v("#")]),t._v(" 线性 dp - 序列型")]),t._v(" "),e("p",[t._v("序列型一般分为单序列、双序列")]),t._v(" "),e("ul",[e("li",[t._v("一般需要自定义空序列表示"),e("span",{staticClass:"katex"},[e("span",{staticClass:"katex-mathml"},[e("math",[e("semantics",[e("mrow",[e("mi",[t._v("f")]),e("mo",[t._v("[")]),e("mn",[t._v("0")]),e("mo",[t._v("]")])],1),e("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("f[0]")])],1)],1)],1),e("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[e("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),e("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),e("span",{staticClass:"base textstyle uncramped"},[e("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.10764em"}},[t._v("f")]),e("span",{staticClass:"mopen"},[t._v("[")]),e("span",{staticClass:"mord mathrm"},[t._v("0")]),e("span",{staticClass:"mclose"},[t._v("]")])])])])]),t._v(" "),e("li",[t._v("有时候会有 K 维序列，表示 K 种状态")])]),t._v(" "),e("h2",{attrs:{id:"房子涂色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#房子涂色"}},[t._v("#")]),t._v(" 房子涂色")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/256.paint-house.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 256. Paint House (easy)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/265.paint-house-ii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 265. Paint House II (hard)"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"打家劫舍系列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打家劫舍系列"}},[t._v("#")]),t._v(" 打家劫舍系列")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/198.house-robber.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 198. House Robber (easy)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/213.house-robber-ii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 213. House Robber II (medium)"),e("OutboundLink")],1)])])]),t._v(" "),e("p",[t._v("打家劫舍 3 是树形 DP")]),t._v(" "),e("h2",{attrs:{id:"股票系列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#股票系列"}},[t._v("#")]),t._v(" 股票系列")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/121.best-time-to-buy-and-sell-stock.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 121. Best Time to Buy and Sell Stock (easy)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/122.best-time-to-buy-and-sell-stock-ii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 122. Best Time to Buy and Sell Stock II (easy)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/123.best-time-to-buy-and-sell-stock-iii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 123. Best Time to Buy and Sell Stock III (hard)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/188.best-time-to-buy-and-sell-stock-iv.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 188. Best Time to Buy and Sell Stock IV (hard)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/301-400/309.best-time-to-buy-and-sell-stock-with-cooldown.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 309. Best Time to Buy and Sell Stock with Cooldown (medium)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/701-800/714.best-time-to-buy-and-sell-stock-with-transaction-fee.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 714. Best Time to Buy and Sell Stock with Transaction Fee (medium)"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"字符串匹配系列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串匹配系列"}},[t._v("#")]),t._v(" 字符串匹配系列")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1-100/10.regular-expression-matching.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 10. Regular Expression Matching (hard)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1-100/44.wildcard-matching.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 44. Wildcard Matching (hard)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1-100/72.edit-distance.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 72. Edit Distance (hard)"),e("OutboundLink")],1)])])]),t._v(" "),e("h2",{attrs:{id:"划分型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#划分型"}},[t._v("#")]),t._v(" 划分型")]),t._v(" "),e("p",[t._v("给定长度为 N 的序列，要求划分为若干段")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("段数不限，或指定 K 段")])]),t._v(" "),e("li",[e("p",[t._v("每一段满足一定的性质（最小代价，能不能等）\n做法：")])]),t._v(" "),e("li",[e("p",[t._v("类似于序列型动态规划，但是通常要加上段数信息")])]),t._v(" "),e("li",[e("p",[t._v("一般用"),e("code",[t._v("f[i + 1][k]")]),t._v("来记录前 i 个元素（元素 0~i-1,f[0][k]表示空序列）分成 k 段的性质，如最小代价")])]),t._v(" "),e("li",[e("p",[t._v("关注最后一段，枚举最后一段可能情况 + 前面序列, 求最优策略")])])]),t._v(" "),e("p",[t._v("注意：划分型动态规划每一段序列一定是连续的")]),t._v(" "),e("h3",{attrs:{id:"数字规律一类题目-一维坐标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数字规律一类题目-一维坐标"}},[t._v("#")]),t._v(" 数字规律一类题目（一维坐标）")]),t._v(" "),e("p",[t._v("把一个完整的数字分成几个，满足一定的性质")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/201-300/279.perfect-squares.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 279. Perfect Squares (medium)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/301-400/343.integer-break.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 343. Integer Break (medium)"),e("OutboundLink")],1)])])]),t._v(" "),e("p",[t._v("此类问题往往也可以用完全背包模型去解决")]),t._v(" "),e("h3",{attrs:{id:"解码方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解码方法"}},[t._v("#")]),t._v(" 解码方法")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1-100/91.decode-ways.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 91. Decode Ways (medium)"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"分割回文串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分割回文串"}},[t._v("#")]),t._v(" 分割回文串")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/101-200/132.palindrome-partitioning-ii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 132. Palindrome Partitioning II (hard)"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/1201-1300/1278.palindrome-partitioning-iii.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 1278. Palindrome Partitioning III (hard)"),e("OutboundLink")],1)])])]),t._v(" "),e("h3",{attrs:{id:"抄写书籍-领扣-437"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抄写书籍-领扣-437"}},[t._v("#")]),t._v(" 抄写书籍（领扣 437）")]),t._v(" "),e("p",[t._v("N 本书，每本有 A[i]页；K 个抄写员，每个抄写员可以抄连续的几本书；抄写员抄写速度一样；问最少需要多长时间抄写完毕。")]),t._v(" "),e("p",[t._v("可以用贪心，动态规划更通用，如果稍微变形，贪心就不可以用了")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/muyids/leetcode/blob/master/algorithms/401-500/410.split-array-largest-sum.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 410. Split Array Largest Sum (hard)"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);