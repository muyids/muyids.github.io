(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{338:function(s,i,e){"use strict";e.r(i);var n=e(14),o=Object(n.a)({},(function(){var s=this,i=s._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[i("h4",{attrs:{id:"分布式架构下-session-共享有什么方案"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#分布式架构下-session-共享有什么方案"}},[s._v("#")]),s._v(" 分布式架构下，Session 共享有什么方案")]),s._v(" "),i("ol",[i("li",[i("p",[s._v("采用无状态服务，抛弃 session")])]),s._v(" "),i("li",[i("p",[s._v("存入 cookie（有安全风险）")])]),s._v(" "),i("li",[i("p",[s._v("服务器之间进行 Session 同步，这样可以保证每个服务器上都有全部的 Session 信息，不过当服务器数量比较多的时候，同步是会有延迟甚至同步失败；")])]),s._v(" "),i("li",[i("p",[s._v("IP 绑定策略")]),s._v(" "),i("p",[s._v("使用 Nginx （或其他复杂均衡软硬件）中的 IP 绑定策略，同一个 IP 只能在指定的同一个机器访问，但是这样做失去了负载均衡的意义，当挂掉一台服务器的时候，会影响一批用户的使用，风险很大；")])]),s._v(" "),i("li",[i("p",[s._v("使用 Redis 存储")]),s._v(" "),i("p",[s._v("把 Session 放到 Redis 中存储，虽然架构上变得复杂，并且需要多访问一次 Redis ，但是这种方案带来的好处也是很大的：")]),s._v(" "),i("ul",[i("li",[s._v("实现了 Session 共享；")]),s._v(" "),i("li",[s._v("可以水平扩展（增加 Redis 服务器）；")]),s._v(" "),i("li",[s._v("服务器重启 Session 不丢失（不过也要注意 Session 在 Redis 中的刷新/失效机制）；")]),s._v(" "),i("li",[s._v("不仅可以跨服务器 Session 共享，甚至可以跨平台（例如网页端和 APP 端）。")])])])])])}),[],!1,null,null,null);i.default=o.exports}}]);